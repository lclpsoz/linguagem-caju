/* This file was generated by SableCC (http://www.sablecc.org/). */

package caju.parser;

import caju.lexer.*;
import caju.node.*;
import caju.analysis.*;
import java.util.*;

import java.io.DataInputStream;
import java.io.BufferedInputStream;
import java.io.IOException;

@SuppressWarnings("nls")
public class Parser
{
    public final Analysis ignoredTokens = new AnalysisAdapter();

    protected ArrayList<Object> nodeList;

    private final Lexer lexer;
    private final ListIterator<Object> stack = new LinkedList<Object>().listIterator();
    private int last_pos;
    private int last_line;
    private Token last_token;
    private final TokenIndex converter = new TokenIndex();
    private final int[] action = new int[2];

    private final static int SHIFT = 0;
    private final static int REDUCE = 1;
    private final static int ACCEPT = 2;
    private final static int ERROR = 3;

    public Parser(@SuppressWarnings("hiding") Lexer lexer)
    {
        this.lexer = lexer;
    }

    @SuppressWarnings({"unchecked","unused"})
    private void push(int numstate, ArrayList<Object> listNode) throws ParserException, LexerException, IOException
    {
        this.nodeList = listNode;

        if(!this.stack.hasNext())
        {
            this.stack.add(new State(numstate, this.nodeList));
            return;
        }

        State s = (State) this.stack.next();
        s.state = numstate;
        s.nodes = this.nodeList;
    }

    private int goTo(int index)
    {
        int state = state();
        int low = 1;
        int high = gotoTable[index].length - 1;
        int value = gotoTable[index][0][1];

        while(low <= high)
        {
            // int middle = (low + high) / 2;
            int middle = (low + high) >>> 1;

            if(state < gotoTable[index][middle][0])
            {
                high = middle - 1;
            }
            else if(state > gotoTable[index][middle][0])
            {
                low = middle + 1;
            }
            else
            {
                value = gotoTable[index][middle][1];
                break;
            }
        }

        return value;
    }

    private int state()
    {
        State s = (State) this.stack.previous();
        this.stack.next();
        return s.state;
    }

    private ArrayList<Object> pop()
    {
        return ((State) this.stack.previous()).nodes;
    }

    private int index(Switchable token)
    {
        this.converter.index = -1;
        token.apply(this.converter);
        return this.converter.index;
    }

    @SuppressWarnings("unchecked")
    public Start parse() throws ParserException, LexerException, IOException
    {
        push(0, null);
        List<Node> ign = null;
        while(true)
        {
            while(index(this.lexer.peek()) == -1)
            {
                if(ign == null)
                {
                    ign = new LinkedList<Node>();
                }

                ign.add(this.lexer.next());
            }

            if(ign != null)
            {
                this.ignoredTokens.setIn(this.lexer.peek(), ign);
                ign = null;
            }

            this.last_pos = this.lexer.peek().getPos();
            this.last_line = this.lexer.peek().getLine();
            this.last_token = this.lexer.peek();

            int index = index(this.lexer.peek());
            this.action[0] = Parser.actionTable[state()][0][1];
            this.action[1] = Parser.actionTable[state()][0][2];

            int low = 1;
            int high = Parser.actionTable[state()].length - 1;

            while(low <= high)
            {
                int middle = (low + high) / 2;

                if(index < Parser.actionTable[state()][middle][0])
                {
                    high = middle - 1;
                }
                else if(index > Parser.actionTable[state()][middle][0])
                {
                    low = middle + 1;
                }
                else
                {
                    this.action[0] = Parser.actionTable[state()][middle][1];
                    this.action[1] = Parser.actionTable[state()][middle][2];
                    break;
                }
            }

            switch(this.action[0])
            {
                case SHIFT:
		    {
		        ArrayList<Object> list = new ArrayList<Object>();
		        list.add(this.lexer.next());
                        push(this.action[1], list);
                    }
		    break;
                case REDUCE:
                    {
                        int reduction = this.action[1];
                        if(reduction < 500) reduce_0(reduction);
                    }
                    break;
                case ACCEPT:
                    {
                        EOF node2 = (EOF) this.lexer.next();
                        PPrograma node1 = (PPrograma) pop().get(0);
                        Start node = new Start(node1, node2);
                        return node;
                    }
                case ERROR:
                    throw new ParserException(this.last_token,
                        "[" + this.last_line + "," + this.last_pos + "] " +
                        Parser.errorMessages[Parser.errors[this.action[1]]]);
            }
        }
    }

    private void reduce_0(int reduction) throws IOException, LexerException, ParserException
    {
        switch(reduction)
        {
            case 0: /* reduce AAdeclaracoesprograma1Programa */
            {
                ArrayList<Object> list = new0();
                push(goTo(0), list);
            }
            break;
            case 1: /* reduce AAdeclaracoesprograma2Programa */
            {
                ArrayList<Object> list = new1();
                push(goTo(0), list);
            }
            break;
            case 2: /* reduce AVariavelDeclaracao */
            {
                ArrayList<Object> list = new2();
                push(goTo(1), list);
            }
            break;
            case 3: /* reduce AFuncaoDeclaracao */
            {
                ArrayList<Object> list = new3();
                push(goTo(1), list);
            }
            break;
            case 4: /* reduce ADecVariavel */
            {
                ArrayList<Object> list = new4();
                push(goTo(2), list);
            }
            break;
            case 5: /* reduce AAlistanomes1ListaNomes */
            {
                ArrayList<Object> list = new5();
                push(goTo(3), list);
            }
            break;
            case 6: /* reduce AAlistanomes2ListaNomes */
            {
                ArrayList<Object> list = new6();
                push(goTo(3), list);
            }
            break;
            case 7: /* reduce AListaNomesCauda */
            {
                ArrayList<Object> list = new7();
                push(goTo(4), list);
            }
            break;
            case 8: /* reduce ABaseTipo */
            {
                ArrayList<Object> list = new8();
                push(goTo(5), list);
            }
            break;
            case 9: /* reduce AVetorTipo */
            {
                ArrayList<Object> list = new9();
                push(goTo(5), list);
            }
            break;
            case 10: /* reduce ANumeroTipoBase */
            {
                ArrayList<Object> list = new10();
                push(goTo(6), list);
            }
            break;
            case 11: /* reduce ACaractereTipoBase */
            {
                ArrayList<Object> list = new11();
                push(goTo(6), list);
            }
            break;
            case 12: /* reduce ABooleanoTipoBase */
            {
                ArrayList<Object> list = new12();
                push(goTo(6), list);
            }
            break;
            case 13: /* reduce AVetorDimensoes */
            {
                ArrayList<Object> list = new13();
                push(goTo(7), list);
            }
            break;
            case 14: /* reduce AAdecfuncao1$Tipo1DecFuncao */
            {
                ArrayList<Object> list = new14();
                push(goTo(8), list);
            }
            break;
            case 15: /* reduce AAdecfuncao1$Vazio1DecFuncao */
            {
                ArrayList<Object> list = new15();
                push(goTo(8), list);
            }
            break;
            case 16: /* reduce AAdecfuncao2$Tipo1DecFuncao */
            {
                ArrayList<Object> list = new16();
                push(goTo(8), list);
            }
            break;
            case 17: /* reduce AAdecfuncao2$Vazio1DecFuncao */
            {
                ArrayList<Object> list = new17();
                push(goTo(8), list);
            }
            break;
            case 18: /* reduce AAdecfuncao3$Tipo1DecFuncao */
            {
                ArrayList<Object> list = new18();
                push(goTo(8), list);
            }
            break;
            case 19: /* reduce AAdecfuncao3$Vazio1DecFuncao */
            {
                ArrayList<Object> list = new19();
                push(goTo(8), list);
            }
            break;
            case 20: /* reduce AAdecfuncao4$Tipo1DecFuncao */
            {
                ArrayList<Object> list = new20();
                push(goTo(8), list);
            }
            break;
            case 21: /* reduce AAdecfuncao4$Vazio1DecFuncao */
            {
                ArrayList<Object> list = new21();
                push(goTo(8), list);
            }
            break;
            case 22: /* reduce AAparametros1Parametros */
            {
                ArrayList<Object> list = new22();
                push(goTo(9), list);
            }
            break;
            case 23: /* reduce AAparametros2Parametros */
            {
                ArrayList<Object> list = new23();
                push(goTo(9), list);
            }
            break;
            case 24: /* reduce AParametroCauda */
            {
                ArrayList<Object> list = new24();
                push(goTo(10), list);
            }
            break;
            case 25: /* reduce AParametro */
            {
                ArrayList<Object> list = new25();
                push(goTo(11), list);
            }
            break;
            case 26: /* reduce AAbloco1Bloco */
            {
                ArrayList<Object> list = new26();
                push(goTo(12), list);
            }
            break;
            case 27: /* reduce AAbloco2Bloco */
            {
                ArrayList<Object> list = new27();
                push(goTo(12), list);
            }
            break;
            case 28: /* reduce AAbloco3Bloco */
            {
                ArrayList<Object> list = new28();
                push(goTo(12), list);
            }
            break;
            case 29: /* reduce AAbloco4Bloco */
            {
                ArrayList<Object> list = new29();
                push(goTo(12), list);
            }
            break;
            case 30: /* reduce AAsecomando1Comando */
            {
                ArrayList<Object> list = new30();
                push(goTo(13), list);
            }
            break;
            case 31: /* reduce AAsecomando2Comando */
            {
                ArrayList<Object> list = new31();
                push(goTo(13), list);
            }
            break;
            case 32: /* reduce AEnquantoComando */
            {
                ArrayList<Object> list = new32();
                push(goTo(13), list);
            }
            break;
            case 33: /* reduce AParaComando */
            {
                ArrayList<Object> list = new33();
                push(goTo(13), list);
            }
            break;
            case 34: /* reduce AParaCadaComando */
            {
                ArrayList<Object> list = new34();
                push(goTo(13), list);
            }
            break;
            case 35: /* reduce ASimplesComando */
            {
                ArrayList<Object> list = new35();
                push(goTo(13), list);
            }
            break;
            case 36: /* reduce ABlocoComandoSemSenao */
            {
                ArrayList<Object> list = new36();
                push(goTo(14), list);
            }
            break;
            case 37: /* reduce ASimplesComandoSemSenao */
            {
                ArrayList<Object> list = new37();
                push(goTo(14), list);
            }
            break;
            case 38: /* reduce AComandoSenao */
            {
                ArrayList<Object> list = new38();
                push(goTo(15), list);
            }
            break;
            case 39: /* reduce AAtribuicaoComandoSimples */
            {
                ArrayList<Object> list = new39();
                push(goTo(16), list);
            }
            break;
            case 40: /* reduce AAretornecomandosimples1ComandoSimples */
            {
                ArrayList<Object> list = new40();
                push(goTo(16), list);
            }
            break;
            case 41: /* reduce AAretornecomandosimples2ComandoSimples */
            {
                ArrayList<Object> list = new41();
                push(goTo(16), list);
            }
            break;
            case 42: /* reduce AChamadaComandoSimples */
            {
                ArrayList<Object> list = new42();
                push(goTo(16), list);
            }
            break;
            case 43: /* reduce AAexibircomandosimples1ComandoSimples */
            {
                ArrayList<Object> list = new43();
                push(goTo(16), list);
            }
            break;
            case 44: /* reduce AAexibircomandosimples2ComandoSimples */
            {
                ArrayList<Object> list = new44();
                push(goTo(16), list);
            }
            break;
            case 45: /* reduce ALerComandoSimples */
            {
                ArrayList<Object> list = new45();
                push(goTo(16), list);
            }
            break;
            case 46: /* reduce AAtrib */
            {
                ArrayList<Object> list = new46();
                push(goTo(17), list);
            }
            break;
            case 47: /* reduce AAlistaatrib1ListaAtrib */
            {
                ArrayList<Object> list = new47();
                push(goTo(18), list);
            }
            break;
            case 48: /* reduce AAlistaatrib2ListaAtrib */
            {
                ArrayList<Object> list = new48();
                push(goTo(18), list);
            }
            break;
            case 49: /* reduce AListaAtribCauda */
            {
                ArrayList<Object> list = new49();
                push(goTo(19), list);
            }
            break;
            case 50: /* reduce AAsimplesvar1Var */
            {
                ArrayList<Object> list = new50();
                push(goTo(20), list);
            }
            break;
            case 51: /* reduce AAsimplesvar2Var */
            {
                ArrayList<Object> list = new51();
                push(goTo(20), list);
            }
            break;
            case 52: /* reduce AVarIndexada */
            {
                ArrayList<Object> list = new52();
                push(goTo(21), list);
            }
            break;
            case 53: /* reduce AAlistavar1ListaVar */
            {
                ArrayList<Object> list = new53();
                push(goTo(22), list);
            }
            break;
            case 54: /* reduce AAlistavar2ListaVar */
            {
                ArrayList<Object> list = new54();
                push(goTo(22), list);
            }
            break;
            case 55: /* reduce AListaVarCauda */
            {
                ArrayList<Object> list = new55();
                push(goTo(23), list);
            }
            break;
            case 56: /* reduce AExp */
            {
                ArrayList<Object> list = new56();
                push(goTo(24), list);
            }
            break;
            case 57: /* reduce AAexpou1ExpOu */
            {
                ArrayList<Object> list = new57();
                push(goTo(25), list);
            }
            break;
            case 58: /* reduce AAexpou2ExpOu */
            {
                ArrayList<Object> list = new58();
                push(goTo(25), list);
            }
            break;
            case 59: /* reduce AExpOuCauda */
            {
                ArrayList<Object> list = new59();
                push(goTo(26), list);
            }
            break;
            case 60: /* reduce AAexpe1ExpE */
            {
                ArrayList<Object> list = new60();
                push(goTo(27), list);
            }
            break;
            case 61: /* reduce AAexpe2ExpE */
            {
                ArrayList<Object> list = new61();
                push(goTo(27), list);
            }
            break;
            case 62: /* reduce AExpECauda */
            {
                ArrayList<Object> list = new62();
                push(goTo(28), list);
            }
            break;
            case 63: /* reduce AAexpigualdade1ExpIgualdade */
            {
                ArrayList<Object> list = new63();
                push(goTo(29), list);
            }
            break;
            case 64: /* reduce AAexpigualdade2ExpIgualdade */
            {
                ArrayList<Object> list = new64();
                push(goTo(29), list);
            }
            break;
            case 65: /* reduce AExpIgualdadeCauda */
            {
                ArrayList<Object> list = new65();
                push(goTo(30), list);
            }
            break;
            case 66: /* reduce AAexprelacional1ExpRelacional */
            {
                ArrayList<Object> list = new66();
                push(goTo(31), list);
            }
            break;
            case 67: /* reduce AAexprelacional2ExpRelacional */
            {
                ArrayList<Object> list = new67();
                push(goTo(31), list);
            }
            break;
            case 68: /* reduce AMenorExpRelacionalCauda */
            {
                ArrayList<Object> list = new68();
                push(goTo(32), list);
            }
            break;
            case 69: /* reduce AMaiorExpRelacionalCauda */
            {
                ArrayList<Object> list = new69();
                push(goTo(32), list);
            }
            break;
            case 70: /* reduce AMenorIgualExpRelacionalCauda */
            {
                ArrayList<Object> list = new70();
                push(goTo(32), list);
            }
            break;
            case 71: /* reduce AMaiorIgualExpRelacionalCauda */
            {
                ArrayList<Object> list = new71();
                push(goTo(32), list);
            }
            break;
            case 72: /* reduce AAexpaditiva1ExpAditiva */
            {
                ArrayList<Object> list = new72();
                push(goTo(33), list);
            }
            break;
            case 73: /* reduce AAexpaditiva2ExpAditiva */
            {
                ArrayList<Object> list = new73();
                push(goTo(33), list);
            }
            break;
            case 74: /* reduce ASomaExpAditivaCauda */
            {
                ArrayList<Object> list = new74();
                push(goTo(34), list);
            }
            break;
            case 75: /* reduce ASubtracaoExpAditivaCauda */
            {
                ArrayList<Object> list = new75();
                push(goTo(34), list);
            }
            break;
            case 76: /* reduce AAexpmultiplicativa1ExpMultiplicativa */
            {
                ArrayList<Object> list = new76();
                push(goTo(35), list);
            }
            break;
            case 77: /* reduce AAexpmultiplicativa2ExpMultiplicativa */
            {
                ArrayList<Object> list = new77();
                push(goTo(35), list);
            }
            break;
            case 78: /* reduce AMultiplicacaoExpMultiplicativaCauda */
            {
                ArrayList<Object> list = new78();
                push(goTo(36), list);
            }
            break;
            case 79: /* reduce ADivisaoExpMultiplicativaCauda */
            {
                ArrayList<Object> list = new79();
                push(goTo(36), list);
            }
            break;
            case 80: /* reduce ANaoExpUnaria */
            {
                ArrayList<Object> list = new80();
                push(goTo(37), list);
            }
            break;
            case 81: /* reduce ANegativoExpUnaria */
            {
                ArrayList<Object> list = new81();
                push(goTo(37), list);
            }
            break;
            case 82: /* reduce APrimariaExpUnaria */
            {
                ArrayList<Object> list = new82();
                push(goTo(37), list);
            }
            break;
            case 83: /* reduce ANumeroExpPrimaria */
            {
                ArrayList<Object> list = new83();
                push(goTo(38), list);
            }
            break;
            case 84: /* reduce ACaractereExpPrimaria */
            {
                ArrayList<Object> list = new84();
                push(goTo(38), list);
            }
            break;
            case 85: /* reduce AStringExpPrimaria */
            {
                ArrayList<Object> list = new85();
                push(goTo(38), list);
            }
            break;
            case 86: /* reduce ABooleanoExpPrimaria */
            {
                ArrayList<Object> list = new86();
                push(goTo(38), list);
            }
            break;
            case 87: /* reduce AVarExpPrimaria */
            {
                ArrayList<Object> list = new87();
                push(goTo(38), list);
            }
            break;
            case 88: /* reduce AChamadaExpPrimaria */
            {
                ArrayList<Object> list = new88();
                push(goTo(38), list);
            }
            break;
            case 89: /* reduce AParentesesExpPrimaria */
            {
                ArrayList<Object> list = new89();
                push(goTo(38), list);
            }
            break;
            case 90: /* reduce AAchamada1Chamada */
            {
                ArrayList<Object> list = new90();
                push(goTo(39), list);
            }
            break;
            case 91: /* reduce AAchamada2Chamada */
            {
                ArrayList<Object> list = new91();
                push(goTo(39), list);
            }
            break;
            case 92: /* reduce AAlistaexp1ListaExp */
            {
                ArrayList<Object> list = new92();
                push(goTo(40), list);
            }
            break;
            case 93: /* reduce AAlistaexp2ListaExp */
            {
                ArrayList<Object> list = new93();
                push(goTo(40), list);
            }
            break;
            case 94: /* reduce AListaExpCauda */
            {
                ArrayList<Object> list = new94();
                push(goTo(41), list);
            }
            break;
            case 95: /* reduce ATerminal$Declaracao */
            {
                ArrayList<Object> list = new95();
                push(goTo(42), list);
            }
            break;
            case 96: /* reduce ANonTerminal$Declaracao */
            {
                ArrayList<Object> list = new96();
                push(goTo(42), list);
            }
            break;
            case 97: /* reduce ATerminal$ListaNomesCauda */
            {
                ArrayList<Object> list = new97();
                push(goTo(43), list);
            }
            break;
            case 98: /* reduce ANonTerminal$ListaNomesCauda */
            {
                ArrayList<Object> list = new98();
                push(goTo(43), list);
            }
            break;
            case 99: /* reduce ATerminal$VetorDimensoes */
            {
                ArrayList<Object> list = new99();
                push(goTo(44), list);
            }
            break;
            case 100: /* reduce ANonTerminal$VetorDimensoes */
            {
                ArrayList<Object> list = new100();
                push(goTo(44), list);
            }
            break;
            case 101: /* reduce ATerminal$ParametroCauda */
            {
                ArrayList<Object> list = new101();
                push(goTo(45), list);
            }
            break;
            case 102: /* reduce ANonTerminal$ParametroCauda */
            {
                ArrayList<Object> list = new102();
                push(goTo(45), list);
            }
            break;
            case 103: /* reduce ATerminal$DecVariavel */
            {
                ArrayList<Object> list = new103();
                push(goTo(46), list);
            }
            break;
            case 104: /* reduce ANonTerminal$DecVariavel */
            {
                ArrayList<Object> list = new104();
                push(goTo(46), list);
            }
            break;
            case 105: /* reduce ATerminal$Comando */
            {
                ArrayList<Object> list = new105();
                push(goTo(47), list);
            }
            break;
            case 106: /* reduce ANonTerminal$Comando */
            {
                ArrayList<Object> list = new106();
                push(goTo(47), list);
            }
            break;
            case 107: /* reduce ATerminal$ListaAtribCauda */
            {
                ArrayList<Object> list = new107();
                push(goTo(48), list);
            }
            break;
            case 108: /* reduce ANonTerminal$ListaAtribCauda */
            {
                ArrayList<Object> list = new108();
                push(goTo(48), list);
            }
            break;
            case 109: /* reduce ATerminal$VarIndexada */
            {
                ArrayList<Object> list = new109();
                push(goTo(49), list);
            }
            break;
            case 110: /* reduce ANonTerminal$VarIndexada */
            {
                ArrayList<Object> list = new110();
                push(goTo(49), list);
            }
            break;
            case 111: /* reduce ATerminal$ListaVarCauda */
            {
                ArrayList<Object> list = new111();
                push(goTo(50), list);
            }
            break;
            case 112: /* reduce ANonTerminal$ListaVarCauda */
            {
                ArrayList<Object> list = new112();
                push(goTo(50), list);
            }
            break;
            case 113: /* reduce ATerminal$ExpOuCauda */
            {
                ArrayList<Object> list = new113();
                push(goTo(51), list);
            }
            break;
            case 114: /* reduce ANonTerminal$ExpOuCauda */
            {
                ArrayList<Object> list = new114();
                push(goTo(51), list);
            }
            break;
            case 115: /* reduce ATerminal$ExpECauda */
            {
                ArrayList<Object> list = new115();
                push(goTo(52), list);
            }
            break;
            case 116: /* reduce ANonTerminal$ExpECauda */
            {
                ArrayList<Object> list = new116();
                push(goTo(52), list);
            }
            break;
            case 117: /* reduce ATerminal$ExpIgualdadeCauda */
            {
                ArrayList<Object> list = new117();
                push(goTo(53), list);
            }
            break;
            case 118: /* reduce ANonTerminal$ExpIgualdadeCauda */
            {
                ArrayList<Object> list = new118();
                push(goTo(53), list);
            }
            break;
            case 119: /* reduce ATerminal$ExpRelacionalCauda */
            {
                ArrayList<Object> list = new119();
                push(goTo(54), list);
            }
            break;
            case 120: /* reduce ANonTerminal$ExpRelacionalCauda */
            {
                ArrayList<Object> list = new120();
                push(goTo(54), list);
            }
            break;
            case 121: /* reduce ATerminal$ExpAditivaCauda */
            {
                ArrayList<Object> list = new121();
                push(goTo(55), list);
            }
            break;
            case 122: /* reduce ANonTerminal$ExpAditivaCauda */
            {
                ArrayList<Object> list = new122();
                push(goTo(55), list);
            }
            break;
            case 123: /* reduce ATerminal$ExpMultiplicativaCauda */
            {
                ArrayList<Object> list = new123();
                push(goTo(56), list);
            }
            break;
            case 124: /* reduce ANonTerminal$ExpMultiplicativaCauda */
            {
                ArrayList<Object> list = new124();
                push(goTo(56), list);
            }
            break;
            case 125: /* reduce ATerminal$ListaExpCauda */
            {
                ArrayList<Object> list = new125();
                push(goTo(57), list);
            }
            break;
            case 126: /* reduce ANonTerminal$ListaExpCauda */
            {
                ArrayList<Object> list = new126();
                push(goTo(57), list);
            }
            break;
        }
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new0() /* reduce AAdeclaracoesprograma1Programa */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PPrograma pprogramaNode1;
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        }

        pprogramaNode1 = new ADeclaracoesPrograma(listNode2);
        }
	nodeList.add(pprogramaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new1() /* reduce AAdeclaracoesprograma2Programa */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPrograma pprogramaNode1;
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        listNode2 = (LinkedList)nodeArrayList1.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }

        pprogramaNode1 = new ADeclaracoesPrograma(listNode3);
        }
	nodeList.add(pprogramaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new2() /* reduce AVariavelDeclaracao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclaracao pdeclaracaoNode1;
        {
            // Block
        PDecVariavel pdecvariavelNode2;
        pdecvariavelNode2 = (PDecVariavel)nodeArrayList1.get(0);

        pdeclaracaoNode1 = new AVariavelDeclaracao(pdecvariavelNode2);
        }
	nodeList.add(pdeclaracaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new3() /* reduce AFuncaoDeclaracao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclaracao pdeclaracaoNode1;
        {
            // Block
        PDecFuncao pdecfuncaoNode2;
        pdecfuncaoNode2 = (PDecFuncao)nodeArrayList1.get(0);

        pdeclaracaoNode1 = new AFuncaoDeclaracao(pdecfuncaoNode2);
        }
	nodeList.add(pdeclaracaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new4() /* reduce ADecVariavel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDecVariavel pdecvariavelNode1;
        {
            // Block
        PTipo ptipoNode2;
        PListaNomes plistanomesNode3;
        TPonto tpontoNode4;
        ptipoNode2 = (PTipo)nodeArrayList1.get(0);
        plistanomesNode3 = (PListaNomes)nodeArrayList2.get(0);
        tpontoNode4 = (TPonto)nodeArrayList3.get(0);

        pdecvariavelNode1 = new ADecVariavel(ptipoNode2, plistanomesNode3, tpontoNode4);
        }
	nodeList.add(pdecvariavelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new5() /* reduce AAlistanomes1ListaNomes */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PListaNomes plistanomesNode1;
        {
            // Block
        TIdentificador tidentificadorNode2;
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        tidentificadorNode2 = (TIdentificador)nodeArrayList1.get(0);
        {
            // Block
        }

        plistanomesNode1 = new AListaNomes(tidentificadorNode2, listNode3);
        }
	nodeList.add(plistanomesNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new6() /* reduce AAlistanomes2ListaNomes */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PListaNomes plistanomesNode1;
        {
            // Block
        TIdentificador tidentificadorNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        tidentificadorNode2 = (TIdentificador)nodeArrayList1.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        plistanomesNode1 = new AListaNomes(tidentificadorNode2, listNode4);
        }
	nodeList.add(plistanomesNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new7() /* reduce AListaNomesCauda */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PListaNomesCauda plistanomescaudaNode1;
        {
            // Block
        TVirgula tvirgulaNode2;
        TIdentificador tidentificadorNode3;
        tvirgulaNode2 = (TVirgula)nodeArrayList1.get(0);
        tidentificadorNode3 = (TIdentificador)nodeArrayList2.get(0);

        plistanomescaudaNode1 = new AListaNomesCauda(tvirgulaNode2, tidentificadorNode3);
        }
	nodeList.add(plistanomescaudaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new8() /* reduce ABaseTipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipo ptipoNode1;
        {
            // Block
        PTipoBase ptipobaseNode2;
        ptipobaseNode2 = (PTipoBase)nodeArrayList1.get(0);

        ptipoNode1 = new ABaseTipo(ptipobaseNode2);
        }
	nodeList.add(ptipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new9() /* reduce AVetorTipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipo ptipoNode1;
        {
            // Block
        TReservadaVetor treservadavetorNode2;
        PTipoBase ptipobaseNode3;
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        treservadavetorNode2 = (TReservadaVetor)nodeArrayList1.get(0);
        ptipobaseNode3 = (PTipoBase)nodeArrayList2.get(0);
        {
            // Block
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        listNode4 = (LinkedList)nodeArrayList3.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }

        ptipoNode1 = new AVetorTipo(treservadavetorNode2, ptipobaseNode3, listNode5);
        }
	nodeList.add(ptipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new10() /* reduce ANumeroTipoBase */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipoBase ptipobaseNode1;
        {
            // Block
        TReservadaNumero treservadanumeroNode2;
        treservadanumeroNode2 = (TReservadaNumero)nodeArrayList1.get(0);

        ptipobaseNode1 = new ANumeroTipoBase(treservadanumeroNode2);
        }
	nodeList.add(ptipobaseNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new11() /* reduce ACaractereTipoBase */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipoBase ptipobaseNode1;
        {
            // Block
        TReservadaCaractere treservadacaractereNode2;
        treservadacaractereNode2 = (TReservadaCaractere)nodeArrayList1.get(0);

        ptipobaseNode1 = new ACaractereTipoBase(treservadacaractereNode2);
        }
	nodeList.add(ptipobaseNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new12() /* reduce ABooleanoTipoBase */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipoBase ptipobaseNode1;
        {
            // Block
        TReservadaBooleano treservadabooleanoNode2;
        treservadabooleanoNode2 = (TReservadaBooleano)nodeArrayList1.get(0);

        ptipobaseNode1 = new ABooleanoTipoBase(treservadabooleanoNode2);
        }
	nodeList.add(ptipobaseNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new13() /* reduce AVetorDimensoes */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVetorDimensoes pvetordimensoesNode1;
        {
            // Block
        TAbreColchetes tabrecolchetesNode2;
        PExp pexpNode3;
        TFechaColchetes tfechacolchetesNode4;
        tabrecolchetesNode2 = (TAbreColchetes)nodeArrayList1.get(0);
        pexpNode3 = (PExp)nodeArrayList2.get(0);
        tfechacolchetesNode4 = (TFechaColchetes)nodeArrayList3.get(0);

        pvetordimensoesNode1 = new AVetorDimensoes(tabrecolchetesNode2, pexpNode3, tfechacolchetesNode4);
        }
	nodeList.add(pvetordimensoesNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new14() /* reduce AAdecfuncao1$Tipo1DecFuncao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDecFuncao pdecfuncaoNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        PTipoRetorno ptiporetornoNode3;
        TIdentificador tidentificadorNode5;
        TAbreParenteses tabreparentesesNode6;
        @SuppressWarnings("unused") Object nullNode7 = null;
        TFechaParenteses tfechaparentesesNode8;
        PBloco pblocoNode9;
        {
            // Block
        PTipo ptipoNode4;
        ptipoNode4 = (PTipo)nodeArrayList1.get(0);

        ptiporetornoNode3 = new ATipoTipoRetorno(ptipoNode4);
        }
        tidentificadorNode5 = (TIdentificador)nodeArrayList2.get(0);
        tabreparentesesNode6 = (TAbreParenteses)nodeArrayList3.get(0);
        tfechaparentesesNode8 = (TFechaParenteses)nodeArrayList4.get(0);
        pblocoNode9 = (PBloco)nodeArrayList5.get(0);

        pdecfuncaoNode1 = new ADecFuncao(null, ptiporetornoNode3, tidentificadorNode5, tabreparentesesNode6, null, tfechaparentesesNode8, pblocoNode9);
        }
	nodeList.add(pdecfuncaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new15() /* reduce AAdecfuncao1$Vazio1DecFuncao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDecFuncao pdecfuncaoNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        PTipoRetorno ptiporetornoNode3;
        TIdentificador tidentificadorNode5;
        TAbreParenteses tabreparentesesNode6;
        @SuppressWarnings("unused") Object nullNode7 = null;
        TFechaParenteses tfechaparentesesNode8;
        PBloco pblocoNode9;
        {
            // Block
        TReservadaVazio treservadavazioNode4;
        treservadavazioNode4 = (TReservadaVazio)nodeArrayList1.get(0);

        ptiporetornoNode3 = new AVazioTipoRetorno(treservadavazioNode4);
        }
        tidentificadorNode5 = (TIdentificador)nodeArrayList2.get(0);
        tabreparentesesNode6 = (TAbreParenteses)nodeArrayList3.get(0);
        tfechaparentesesNode8 = (TFechaParenteses)nodeArrayList4.get(0);
        pblocoNode9 = (PBloco)nodeArrayList5.get(0);

        pdecfuncaoNode1 = new ADecFuncao(null, ptiporetornoNode3, tidentificadorNode5, tabreparentesesNode6, null, tfechaparentesesNode8, pblocoNode9);
        }
	nodeList.add(pdecfuncaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new16() /* reduce AAdecfuncao2$Tipo1DecFuncao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDecFuncao pdecfuncaoNode1;
        {
            // Block
        TOpRetornoFuncao topretornofuncaoNode2;
        PTipoRetorno ptiporetornoNode3;
        TIdentificador tidentificadorNode5;
        TAbreParenteses tabreparentesesNode6;
        @SuppressWarnings("unused") Object nullNode7 = null;
        TFechaParenteses tfechaparentesesNode8;
        PBloco pblocoNode9;
        topretornofuncaoNode2 = (TOpRetornoFuncao)nodeArrayList1.get(0);
        {
            // Block
        PTipo ptipoNode4;
        ptipoNode4 = (PTipo)nodeArrayList2.get(0);

        ptiporetornoNode3 = new ATipoTipoRetorno(ptipoNode4);
        }
        tidentificadorNode5 = (TIdentificador)nodeArrayList3.get(0);
        tabreparentesesNode6 = (TAbreParenteses)nodeArrayList4.get(0);
        tfechaparentesesNode8 = (TFechaParenteses)nodeArrayList5.get(0);
        pblocoNode9 = (PBloco)nodeArrayList6.get(0);

        pdecfuncaoNode1 = new ADecFuncao(topretornofuncaoNode2, ptiporetornoNode3, tidentificadorNode5, tabreparentesesNode6, null, tfechaparentesesNode8, pblocoNode9);
        }
	nodeList.add(pdecfuncaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new17() /* reduce AAdecfuncao2$Vazio1DecFuncao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDecFuncao pdecfuncaoNode1;
        {
            // Block
        TOpRetornoFuncao topretornofuncaoNode2;
        PTipoRetorno ptiporetornoNode3;
        TIdentificador tidentificadorNode5;
        TAbreParenteses tabreparentesesNode6;
        @SuppressWarnings("unused") Object nullNode7 = null;
        TFechaParenteses tfechaparentesesNode8;
        PBloco pblocoNode9;
        topretornofuncaoNode2 = (TOpRetornoFuncao)nodeArrayList1.get(0);
        {
            // Block
        TReservadaVazio treservadavazioNode4;
        treservadavazioNode4 = (TReservadaVazio)nodeArrayList2.get(0);

        ptiporetornoNode3 = new AVazioTipoRetorno(treservadavazioNode4);
        }
        tidentificadorNode5 = (TIdentificador)nodeArrayList3.get(0);
        tabreparentesesNode6 = (TAbreParenteses)nodeArrayList4.get(0);
        tfechaparentesesNode8 = (TFechaParenteses)nodeArrayList5.get(0);
        pblocoNode9 = (PBloco)nodeArrayList6.get(0);

        pdecfuncaoNode1 = new ADecFuncao(topretornofuncaoNode2, ptiporetornoNode3, tidentificadorNode5, tabreparentesesNode6, null, tfechaparentesesNode8, pblocoNode9);
        }
	nodeList.add(pdecfuncaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new18() /* reduce AAdecfuncao3$Tipo1DecFuncao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDecFuncao pdecfuncaoNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        PTipoRetorno ptiporetornoNode3;
        TIdentificador tidentificadorNode5;
        TAbreParenteses tabreparentesesNode6;
        PParametros pparametrosNode7;
        TFechaParenteses tfechaparentesesNode8;
        PBloco pblocoNode9;
        {
            // Block
        PTipo ptipoNode4;
        ptipoNode4 = (PTipo)nodeArrayList1.get(0);

        ptiporetornoNode3 = new ATipoTipoRetorno(ptipoNode4);
        }
        tidentificadorNode5 = (TIdentificador)nodeArrayList2.get(0);
        tabreparentesesNode6 = (TAbreParenteses)nodeArrayList3.get(0);
        pparametrosNode7 = (PParametros)nodeArrayList4.get(0);
        tfechaparentesesNode8 = (TFechaParenteses)nodeArrayList5.get(0);
        pblocoNode9 = (PBloco)nodeArrayList6.get(0);

        pdecfuncaoNode1 = new ADecFuncao(null, ptiporetornoNode3, tidentificadorNode5, tabreparentesesNode6, pparametrosNode7, tfechaparentesesNode8, pblocoNode9);
        }
	nodeList.add(pdecfuncaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new19() /* reduce AAdecfuncao3$Vazio1DecFuncao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDecFuncao pdecfuncaoNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        PTipoRetorno ptiporetornoNode3;
        TIdentificador tidentificadorNode5;
        TAbreParenteses tabreparentesesNode6;
        PParametros pparametrosNode7;
        TFechaParenteses tfechaparentesesNode8;
        PBloco pblocoNode9;
        {
            // Block
        TReservadaVazio treservadavazioNode4;
        treservadavazioNode4 = (TReservadaVazio)nodeArrayList1.get(0);

        ptiporetornoNode3 = new AVazioTipoRetorno(treservadavazioNode4);
        }
        tidentificadorNode5 = (TIdentificador)nodeArrayList2.get(0);
        tabreparentesesNode6 = (TAbreParenteses)nodeArrayList3.get(0);
        pparametrosNode7 = (PParametros)nodeArrayList4.get(0);
        tfechaparentesesNode8 = (TFechaParenteses)nodeArrayList5.get(0);
        pblocoNode9 = (PBloco)nodeArrayList6.get(0);

        pdecfuncaoNode1 = new ADecFuncao(null, ptiporetornoNode3, tidentificadorNode5, tabreparentesesNode6, pparametrosNode7, tfechaparentesesNode8, pblocoNode9);
        }
	nodeList.add(pdecfuncaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new20() /* reduce AAdecfuncao4$Tipo1DecFuncao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDecFuncao pdecfuncaoNode1;
        {
            // Block
        TOpRetornoFuncao topretornofuncaoNode2;
        PTipoRetorno ptiporetornoNode3;
        TIdentificador tidentificadorNode5;
        TAbreParenteses tabreparentesesNode6;
        PParametros pparametrosNode7;
        TFechaParenteses tfechaparentesesNode8;
        PBloco pblocoNode9;
        topretornofuncaoNode2 = (TOpRetornoFuncao)nodeArrayList1.get(0);
        {
            // Block
        PTipo ptipoNode4;
        ptipoNode4 = (PTipo)nodeArrayList2.get(0);

        ptiporetornoNode3 = new ATipoTipoRetorno(ptipoNode4);
        }
        tidentificadorNode5 = (TIdentificador)nodeArrayList3.get(0);
        tabreparentesesNode6 = (TAbreParenteses)nodeArrayList4.get(0);
        pparametrosNode7 = (PParametros)nodeArrayList5.get(0);
        tfechaparentesesNode8 = (TFechaParenteses)nodeArrayList6.get(0);
        pblocoNode9 = (PBloco)nodeArrayList7.get(0);

        pdecfuncaoNode1 = new ADecFuncao(topretornofuncaoNode2, ptiporetornoNode3, tidentificadorNode5, tabreparentesesNode6, pparametrosNode7, tfechaparentesesNode8, pblocoNode9);
        }
	nodeList.add(pdecfuncaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new21() /* reduce AAdecfuncao4$Vazio1DecFuncao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDecFuncao pdecfuncaoNode1;
        {
            // Block
        TOpRetornoFuncao topretornofuncaoNode2;
        PTipoRetorno ptiporetornoNode3;
        TIdentificador tidentificadorNode5;
        TAbreParenteses tabreparentesesNode6;
        PParametros pparametrosNode7;
        TFechaParenteses tfechaparentesesNode8;
        PBloco pblocoNode9;
        topretornofuncaoNode2 = (TOpRetornoFuncao)nodeArrayList1.get(0);
        {
            // Block
        TReservadaVazio treservadavazioNode4;
        treservadavazioNode4 = (TReservadaVazio)nodeArrayList2.get(0);

        ptiporetornoNode3 = new AVazioTipoRetorno(treservadavazioNode4);
        }
        tidentificadorNode5 = (TIdentificador)nodeArrayList3.get(0);
        tabreparentesesNode6 = (TAbreParenteses)nodeArrayList4.get(0);
        pparametrosNode7 = (PParametros)nodeArrayList5.get(0);
        tfechaparentesesNode8 = (TFechaParenteses)nodeArrayList6.get(0);
        pblocoNode9 = (PBloco)nodeArrayList7.get(0);

        pdecfuncaoNode1 = new ADecFuncao(topretornofuncaoNode2, ptiporetornoNode3, tidentificadorNode5, tabreparentesesNode6, pparametrosNode7, tfechaparentesesNode8, pblocoNode9);
        }
	nodeList.add(pdecfuncaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new22() /* reduce AAparametros1Parametros */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParametros pparametrosNode1;
        {
            // Block
        PParametro pparametroNode2;
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        pparametroNode2 = (PParametro)nodeArrayList1.get(0);
        {
            // Block
        }

        pparametrosNode1 = new AParametros(pparametroNode2, listNode3);
        }
	nodeList.add(pparametrosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new23() /* reduce AAparametros2Parametros */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParametros pparametrosNode1;
        {
            // Block
        PParametro pparametroNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        pparametroNode2 = (PParametro)nodeArrayList1.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        pparametrosNode1 = new AParametros(pparametroNode2, listNode4);
        }
	nodeList.add(pparametrosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new24() /* reduce AParametroCauda */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParametroCauda pparametrocaudaNode1;
        {
            // Block
        TBarraVertical tbarraverticalNode2;
        PParametro pparametroNode3;
        tbarraverticalNode2 = (TBarraVertical)nodeArrayList1.get(0);
        pparametroNode3 = (PParametro)nodeArrayList2.get(0);

        pparametrocaudaNode1 = new AParametroCauda(tbarraverticalNode2, pparametroNode3);
        }
	nodeList.add(pparametrocaudaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new25() /* reduce AParametro */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParametro pparametroNode1;
        {
            // Block
        PTipo ptipoNode2;
        TIdentificador tidentificadorNode3;
        ptipoNode2 = (PTipo)nodeArrayList1.get(0);
        tidentificadorNode3 = (TIdentificador)nodeArrayList2.get(0);

        pparametroNode1 = new AParametro(ptipoNode2, tidentificadorNode3);
        }
	nodeList.add(pparametroNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new26() /* reduce AAbloco1Bloco */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBloco pblocoNode1;
        {
            // Block
        TReservadaInicio treservadainicioNode2;
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        TReservadaFim treservadafimNode5;
        treservadainicioNode2 = (TReservadaInicio)nodeArrayList1.get(0);
        {
            // Block
        }
        {
            // Block
        }
        treservadafimNode5 = (TReservadaFim)nodeArrayList2.get(0);

        pblocoNode1 = new ABloco(treservadainicioNode2, listNode3, listNode4, treservadafimNode5);
        }
	nodeList.add(pblocoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new27() /* reduce AAbloco2Bloco */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBloco pblocoNode1;
        {
            // Block
        TReservadaInicio treservadainicioNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        TReservadaFim treservadafimNode6;
        treservadainicioNode2 = (TReservadaInicio)nodeArrayList1.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        {
            // Block
        }
        treservadafimNode6 = (TReservadaFim)nodeArrayList3.get(0);

        pblocoNode1 = new ABloco(treservadainicioNode2, listNode4, listNode5, treservadafimNode6);
        }
	nodeList.add(pblocoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new28() /* reduce AAbloco3Bloco */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBloco pblocoNode1;
        {
            // Block
        TReservadaInicio treservadainicioNode2;
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        TReservadaFim treservadafimNode6;
        treservadainicioNode2 = (TReservadaInicio)nodeArrayList1.get(0);
        {
            // Block
        }
        {
            // Block
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        listNode4 = (LinkedList)nodeArrayList2.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        treservadafimNode6 = (TReservadaFim)nodeArrayList3.get(0);

        pblocoNode1 = new ABloco(treservadainicioNode2, listNode3, listNode5, treservadafimNode6);
        }
	nodeList.add(pblocoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new29() /* reduce AAbloco4Bloco */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBloco pblocoNode1;
        {
            // Block
        TReservadaInicio treservadainicioNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        TReservadaFim treservadafimNode7;
        treservadainicioNode2 = (TReservadaInicio)nodeArrayList1.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        {
            // Block
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        listNode5 = (LinkedList)nodeArrayList3.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        treservadafimNode7 = (TReservadaFim)nodeArrayList4.get(0);

        pblocoNode1 = new ABloco(treservadainicioNode2, listNode4, listNode6, treservadafimNode7);
        }
	nodeList.add(pblocoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new30() /* reduce AAsecomando1Comando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TReservadaSe treservadaseNode2;
        TAbreParenteses tabreparentesesNode3;
        PExp pexpNode4;
        TFechaParenteses tfechaparentesesNode5;
        PComandoSemSenao pcomandosemsenaoNode6;
        @SuppressWarnings("unused") Object nullNode7 = null;
        treservadaseNode2 = (TReservadaSe)nodeArrayList1.get(0);
        tabreparentesesNode3 = (TAbreParenteses)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);
        tfechaparentesesNode5 = (TFechaParenteses)nodeArrayList4.get(0);
        pcomandosemsenaoNode6 = (PComandoSemSenao)nodeArrayList5.get(0);

        pcomandoNode1 = new ASeComando(treservadaseNode2, tabreparentesesNode3, pexpNode4, tfechaparentesesNode5, pcomandosemsenaoNode6, null);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new31() /* reduce AAsecomando2Comando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TReservadaSe treservadaseNode2;
        TAbreParenteses tabreparentesesNode3;
        PExp pexpNode4;
        TFechaParenteses tfechaparentesesNode5;
        PComandoSemSenao pcomandosemsenaoNode6;
        PComandoSenao pcomandosenaoNode7;
        treservadaseNode2 = (TReservadaSe)nodeArrayList1.get(0);
        tabreparentesesNode3 = (TAbreParenteses)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);
        tfechaparentesesNode5 = (TFechaParenteses)nodeArrayList4.get(0);
        pcomandosemsenaoNode6 = (PComandoSemSenao)nodeArrayList5.get(0);
        pcomandosenaoNode7 = (PComandoSenao)nodeArrayList6.get(0);

        pcomandoNode1 = new ASeComando(treservadaseNode2, tabreparentesesNode3, pexpNode4, tfechaparentesesNode5, pcomandosemsenaoNode6, pcomandosenaoNode7);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new32() /* reduce AEnquantoComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TReservadaEnquanto treservadaenquantoNode2;
        TAbreParenteses tabreparentesesNode3;
        PExp pexpNode4;
        TFechaParenteses tfechaparentesesNode5;
        PComandoSemSenao pcomandosemsenaoNode6;
        treservadaenquantoNode2 = (TReservadaEnquanto)nodeArrayList1.get(0);
        tabreparentesesNode3 = (TAbreParenteses)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);
        tfechaparentesesNode5 = (TFechaParenteses)nodeArrayList4.get(0);
        pcomandosemsenaoNode6 = (PComandoSemSenao)nodeArrayList5.get(0);

        pcomandoNode1 = new AEnquantoComando(treservadaenquantoNode2, tabreparentesesNode3, pexpNode4, tfechaparentesesNode5, pcomandosemsenaoNode6);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new33() /* reduce AParaComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TReservadaPara treservadaparaNode2;
        TAbreParenteses tabreparentesesNode3;
        PListaAtrib plistaatribNode4;
        TPontoVirgula tpontovirgulaNode5;
        PExp pexpNode6;
        TPontoVirgula tpontovirgulaNode7;
        PListaAtrib plistaatribNode8;
        TFechaParenteses tfechaparentesesNode9;
        PComandoSemSenao pcomandosemsenaoNode10;
        treservadaparaNode2 = (TReservadaPara)nodeArrayList1.get(0);
        tabreparentesesNode3 = (TAbreParenteses)nodeArrayList2.get(0);
        plistaatribNode4 = (PListaAtrib)nodeArrayList3.get(0);
        tpontovirgulaNode5 = (TPontoVirgula)nodeArrayList4.get(0);
        pexpNode6 = (PExp)nodeArrayList5.get(0);
        tpontovirgulaNode7 = (TPontoVirgula)nodeArrayList6.get(0);
        plistaatribNode8 = (PListaAtrib)nodeArrayList7.get(0);
        tfechaparentesesNode9 = (TFechaParenteses)nodeArrayList8.get(0);
        pcomandosemsenaoNode10 = (PComandoSemSenao)nodeArrayList9.get(0);

        pcomandoNode1 = new AParaComando(treservadaparaNode2, tabreparentesesNode3, plistaatribNode4, tpontovirgulaNode5, pexpNode6, tpontovirgulaNode7, plistaatribNode8, tfechaparentesesNode9, pcomandosemsenaoNode10);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new34() /* reduce AParaCadaComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TReservadaParaCada treservadaparacadaNode2;
        TAbreParenteses tabreparentesesNode3;
        PTipo ptipoNode4;
        TIdentificador tidentificadorNode5;
        TDoisPontos tdoispontosNode6;
        TIdentificador tidentificadorNode7;
        TFechaParenteses tfechaparentesesNode8;
        PComandoSemSenao pcomandosemsenaoNode9;
        treservadaparacadaNode2 = (TReservadaParaCada)nodeArrayList1.get(0);
        tabreparentesesNode3 = (TAbreParenteses)nodeArrayList2.get(0);
        ptipoNode4 = (PTipo)nodeArrayList3.get(0);
        tidentificadorNode5 = (TIdentificador)nodeArrayList4.get(0);
        tdoispontosNode6 = (TDoisPontos)nodeArrayList5.get(0);
        tidentificadorNode7 = (TIdentificador)nodeArrayList6.get(0);
        tfechaparentesesNode8 = (TFechaParenteses)nodeArrayList7.get(0);
        pcomandosemsenaoNode9 = (PComandoSemSenao)nodeArrayList8.get(0);

        pcomandoNode1 = new AParaCadaComando(treservadaparacadaNode2, tabreparentesesNode3, ptipoNode4, tidentificadorNode5, tdoispontosNode6, tidentificadorNode7, tfechaparentesesNode8, pcomandosemsenaoNode9);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new35() /* reduce ASimplesComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PComandoSimples pcomandosimplesNode2;
        pcomandosimplesNode2 = (PComandoSimples)nodeArrayList1.get(0);

        pcomandoNode1 = new ASimplesComando(pcomandosimplesNode2);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new36() /* reduce ABlocoComandoSemSenao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoSemSenao pcomandosemsenaoNode1;
        {
            // Block
        PBloco pblocoNode2;
        pblocoNode2 = (PBloco)nodeArrayList1.get(0);

        pcomandosemsenaoNode1 = new ABlocoComandoSemSenao(pblocoNode2);
        }
	nodeList.add(pcomandosemsenaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new37() /* reduce ASimplesComandoSemSenao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoSemSenao pcomandosemsenaoNode1;
        {
            // Block
        PComandoSimples pcomandosimplesNode2;
        pcomandosimplesNode2 = (PComandoSimples)nodeArrayList1.get(0);

        pcomandosemsenaoNode1 = new ASimplesComandoSemSenao(pcomandosimplesNode2);
        }
	nodeList.add(pcomandosemsenaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new38() /* reduce AComandoSenao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoSenao pcomandosenaoNode1;
        {
            // Block
        TReservadaSenao treservadasenaoNode2;
        PComandoSemSenao pcomandosemsenaoNode3;
        treservadasenaoNode2 = (TReservadaSenao)nodeArrayList1.get(0);
        pcomandosemsenaoNode3 = (PComandoSemSenao)nodeArrayList2.get(0);

        pcomandosenaoNode1 = new AComandoSenao(treservadasenaoNode2, pcomandosemsenaoNode3);
        }
	nodeList.add(pcomandosenaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new39() /* reduce AAtribuicaoComandoSimples */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoSimples pcomandosimplesNode1;
        {
            // Block
        PAtrib patribNode2;
        TPonto tpontoNode3;
        patribNode2 = (PAtrib)nodeArrayList1.get(0);
        tpontoNode3 = (TPonto)nodeArrayList2.get(0);

        pcomandosimplesNode1 = new AAtribuicaoComandoSimples(patribNode2, tpontoNode3);
        }
	nodeList.add(pcomandosimplesNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new40() /* reduce AAretornecomandosimples1ComandoSimples */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoSimples pcomandosimplesNode1;
        {
            // Block
        TReservadaRetorne treservadaretorneNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        TPonto tpontoNode4;
        treservadaretorneNode2 = (TReservadaRetorne)nodeArrayList1.get(0);
        tpontoNode4 = (TPonto)nodeArrayList2.get(0);

        pcomandosimplesNode1 = new ARetorneComandoSimples(treservadaretorneNode2, null, tpontoNode4);
        }
	nodeList.add(pcomandosimplesNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new41() /* reduce AAretornecomandosimples2ComandoSimples */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoSimples pcomandosimplesNode1;
        {
            // Block
        TReservadaRetorne treservadaretorneNode2;
        PExp pexpNode3;
        TPonto tpontoNode4;
        treservadaretorneNode2 = (TReservadaRetorne)nodeArrayList1.get(0);
        pexpNode3 = (PExp)nodeArrayList2.get(0);
        tpontoNode4 = (TPonto)nodeArrayList3.get(0);

        pcomandosimplesNode1 = new ARetorneComandoSimples(treservadaretorneNode2, pexpNode3, tpontoNode4);
        }
	nodeList.add(pcomandosimplesNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new42() /* reduce AChamadaComandoSimples */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoSimples pcomandosimplesNode1;
        {
            // Block
        PChamada pchamadaNode2;
        TPonto tpontoNode3;
        pchamadaNode2 = (PChamada)nodeArrayList1.get(0);
        tpontoNode3 = (TPonto)nodeArrayList2.get(0);

        pcomandosimplesNode1 = new AChamadaComandoSimples(pchamadaNode2, tpontoNode3);
        }
	nodeList.add(pcomandosimplesNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new43() /* reduce AAexibircomandosimples1ComandoSimples */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoSimples pcomandosimplesNode1;
        {
            // Block
        TReservadaExibir treservadaexibirNode2;
        TAbreParenteses tabreparentesesNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        TFechaParenteses tfechaparentesesNode5;
        TPonto tpontoNode6;
        treservadaexibirNode2 = (TReservadaExibir)nodeArrayList1.get(0);
        tabreparentesesNode3 = (TAbreParenteses)nodeArrayList2.get(0);
        tfechaparentesesNode5 = (TFechaParenteses)nodeArrayList3.get(0);
        tpontoNode6 = (TPonto)nodeArrayList4.get(0);

        pcomandosimplesNode1 = new AExibirComandoSimples(treservadaexibirNode2, tabreparentesesNode3, null, tfechaparentesesNode5, tpontoNode6);
        }
	nodeList.add(pcomandosimplesNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new44() /* reduce AAexibircomandosimples2ComandoSimples */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoSimples pcomandosimplesNode1;
        {
            // Block
        TReservadaExibir treservadaexibirNode2;
        TAbreParenteses tabreparentesesNode3;
        PListaExp plistaexpNode4;
        TFechaParenteses tfechaparentesesNode5;
        TPonto tpontoNode6;
        treservadaexibirNode2 = (TReservadaExibir)nodeArrayList1.get(0);
        tabreparentesesNode3 = (TAbreParenteses)nodeArrayList2.get(0);
        plistaexpNode4 = (PListaExp)nodeArrayList3.get(0);
        tfechaparentesesNode5 = (TFechaParenteses)nodeArrayList4.get(0);
        tpontoNode6 = (TPonto)nodeArrayList5.get(0);

        pcomandosimplesNode1 = new AExibirComandoSimples(treservadaexibirNode2, tabreparentesesNode3, plistaexpNode4, tfechaparentesesNode5, tpontoNode6);
        }
	nodeList.add(pcomandosimplesNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new45() /* reduce ALerComandoSimples */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoSimples pcomandosimplesNode1;
        {
            // Block
        TReservadaLer treservadalerNode2;
        TAbreParenteses tabreparentesesNode3;
        PListaVar plistavarNode4;
        TFechaParenteses tfechaparentesesNode5;
        TPonto tpontoNode6;
        treservadalerNode2 = (TReservadaLer)nodeArrayList1.get(0);
        tabreparentesesNode3 = (TAbreParenteses)nodeArrayList2.get(0);
        plistavarNode4 = (PListaVar)nodeArrayList3.get(0);
        tfechaparentesesNode5 = (TFechaParenteses)nodeArrayList4.get(0);
        tpontoNode6 = (TPonto)nodeArrayList5.get(0);

        pcomandosimplesNode1 = new ALerComandoSimples(treservadalerNode2, tabreparentesesNode3, plistavarNode4, tfechaparentesesNode5, tpontoNode6);
        }
	nodeList.add(pcomandosimplesNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new46() /* reduce AAtrib */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAtrib patribNode1;
        {
            // Block
        PVar pvarNode2;
        TOpAtribuicao topatribuicaoNode3;
        PExp pexpNode4;
        pvarNode2 = (PVar)nodeArrayList1.get(0);
        topatribuicaoNode3 = (TOpAtribuicao)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);

        patribNode1 = new AAtrib(pvarNode2, topatribuicaoNode3, pexpNode4);
        }
	nodeList.add(patribNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new47() /* reduce AAlistaatrib1ListaAtrib */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PListaAtrib plistaatribNode1;
        {
            // Block
        PAtrib patribNode2;
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        patribNode2 = (PAtrib)nodeArrayList1.get(0);
        {
            // Block
        }

        plistaatribNode1 = new AListaAtrib(patribNode2, listNode3);
        }
	nodeList.add(plistaatribNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new48() /* reduce AAlistaatrib2ListaAtrib */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PListaAtrib plistaatribNode1;
        {
            // Block
        PAtrib patribNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        patribNode2 = (PAtrib)nodeArrayList1.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        plistaatribNode1 = new AListaAtrib(patribNode2, listNode4);
        }
	nodeList.add(plistaatribNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new49() /* reduce AListaAtribCauda */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PListaAtribCauda plistaatribcaudaNode1;
        {
            // Block
        TVirgula tvirgulaNode2;
        PAtrib patribNode3;
        tvirgulaNode2 = (TVirgula)nodeArrayList1.get(0);
        patribNode3 = (PAtrib)nodeArrayList2.get(0);

        plistaatribcaudaNode1 = new AListaAtribCauda(tvirgulaNode2, patribNode3);
        }
	nodeList.add(plistaatribcaudaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new50() /* reduce AAsimplesvar1Var */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVar pvarNode1;
        {
            // Block
        TIdentificador tidentificadorNode2;
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        tidentificadorNode2 = (TIdentificador)nodeArrayList1.get(0);
        {
            // Block
        }

        pvarNode1 = new ASimplesVar(tidentificadorNode2, listNode3);
        }
	nodeList.add(pvarNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new51() /* reduce AAsimplesvar2Var */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVar pvarNode1;
        {
            // Block
        TIdentificador tidentificadorNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        tidentificadorNode2 = (TIdentificador)nodeArrayList1.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        pvarNode1 = new ASimplesVar(tidentificadorNode2, listNode4);
        }
	nodeList.add(pvarNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new52() /* reduce AVarIndexada */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVarIndexada pvarindexadaNode1;
        {
            // Block
        TAbreColchetes tabrecolchetesNode2;
        PExp pexpNode3;
        TFechaColchetes tfechacolchetesNode4;
        tabrecolchetesNode2 = (TAbreColchetes)nodeArrayList1.get(0);
        pexpNode3 = (PExp)nodeArrayList2.get(0);
        tfechacolchetesNode4 = (TFechaColchetes)nodeArrayList3.get(0);

        pvarindexadaNode1 = new AVarIndexada(tabrecolchetesNode2, pexpNode3, tfechacolchetesNode4);
        }
	nodeList.add(pvarindexadaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new53() /* reduce AAlistavar1ListaVar */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PListaVar plistavarNode1;
        {
            // Block
        PVar pvarNode2;
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        pvarNode2 = (PVar)nodeArrayList1.get(0);
        {
            // Block
        }

        plistavarNode1 = new AListaVar(pvarNode2, listNode3);
        }
	nodeList.add(plistavarNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new54() /* reduce AAlistavar2ListaVar */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PListaVar plistavarNode1;
        {
            // Block
        PVar pvarNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        pvarNode2 = (PVar)nodeArrayList1.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        plistavarNode1 = new AListaVar(pvarNode2, listNode4);
        }
	nodeList.add(plistavarNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new55() /* reduce AListaVarCauda */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PListaVarCauda plistavarcaudaNode1;
        {
            // Block
        TVirgula tvirgulaNode2;
        PVar pvarNode3;
        tvirgulaNode2 = (TVirgula)nodeArrayList1.get(0);
        pvarNode3 = (PVar)nodeArrayList2.get(0);

        plistavarcaudaNode1 = new AListaVarCauda(tvirgulaNode2, pvarNode3);
        }
	nodeList.add(plistavarcaudaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new56() /* reduce AExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp pexpNode1;
        {
            // Block
        PExpOu pexpouNode2;
        pexpouNode2 = (PExpOu)nodeArrayList1.get(0);

        pexpNode1 = new AExp(pexpouNode2);
        }
	nodeList.add(pexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new57() /* reduce AAexpou1ExpOu */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpOu pexpouNode1;
        {
            // Block
        PExpE pexpeNode2;
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        pexpeNode2 = (PExpE)nodeArrayList1.get(0);
        {
            // Block
        }

        pexpouNode1 = new AExpOu(pexpeNode2, listNode3);
        }
	nodeList.add(pexpouNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new58() /* reduce AAexpou2ExpOu */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpOu pexpouNode1;
        {
            // Block
        PExpE pexpeNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        pexpeNode2 = (PExpE)nodeArrayList1.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        pexpouNode1 = new AExpOu(pexpeNode2, listNode4);
        }
	nodeList.add(pexpouNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new59() /* reduce AExpOuCauda */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpOuCauda pexpoucaudaNode1;
        {
            // Block
        TOpOu topouNode2;
        PExpE pexpeNode3;
        topouNode2 = (TOpOu)nodeArrayList1.get(0);
        pexpeNode3 = (PExpE)nodeArrayList2.get(0);

        pexpoucaudaNode1 = new AExpOuCauda(topouNode2, pexpeNode3);
        }
	nodeList.add(pexpoucaudaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new60() /* reduce AAexpe1ExpE */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpE pexpeNode1;
        {
            // Block
        PExpIgualdade pexpigualdadeNode2;
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        pexpigualdadeNode2 = (PExpIgualdade)nodeArrayList1.get(0);
        {
            // Block
        }

        pexpeNode1 = new AExpE(pexpigualdadeNode2, listNode3);
        }
	nodeList.add(pexpeNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new61() /* reduce AAexpe2ExpE */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpE pexpeNode1;
        {
            // Block
        PExpIgualdade pexpigualdadeNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        pexpigualdadeNode2 = (PExpIgualdade)nodeArrayList1.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        pexpeNode1 = new AExpE(pexpigualdadeNode2, listNode4);
        }
	nodeList.add(pexpeNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new62() /* reduce AExpECauda */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpECauda pexpecaudaNode1;
        {
            // Block
        TOpE topeNode2;
        PExpIgualdade pexpigualdadeNode3;
        topeNode2 = (TOpE)nodeArrayList1.get(0);
        pexpigualdadeNode3 = (PExpIgualdade)nodeArrayList2.get(0);

        pexpecaudaNode1 = new AExpECauda(topeNode2, pexpigualdadeNode3);
        }
	nodeList.add(pexpecaudaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new63() /* reduce AAexpigualdade1ExpIgualdade */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpIgualdade pexpigualdadeNode1;
        {
            // Block
        PExpRelacional pexprelacionalNode2;
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        pexprelacionalNode2 = (PExpRelacional)nodeArrayList1.get(0);
        {
            // Block
        }

        pexpigualdadeNode1 = new AExpIgualdade(pexprelacionalNode2, listNode3);
        }
	nodeList.add(pexpigualdadeNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new64() /* reduce AAexpigualdade2ExpIgualdade */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpIgualdade pexpigualdadeNode1;
        {
            // Block
        PExpRelacional pexprelacionalNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        pexprelacionalNode2 = (PExpRelacional)nodeArrayList1.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        pexpigualdadeNode1 = new AExpIgualdade(pexprelacionalNode2, listNode4);
        }
	nodeList.add(pexpigualdadeNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new65() /* reduce AExpIgualdadeCauda */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpIgualdadeCauda pexpigualdadecaudaNode1;
        {
            // Block
        TOpIgual topigualNode2;
        PExpRelacional pexprelacionalNode3;
        topigualNode2 = (TOpIgual)nodeArrayList1.get(0);
        pexprelacionalNode3 = (PExpRelacional)nodeArrayList2.get(0);

        pexpigualdadecaudaNode1 = new AExpIgualdadeCauda(topigualNode2, pexprelacionalNode3);
        }
	nodeList.add(pexpigualdadecaudaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new66() /* reduce AAexprelacional1ExpRelacional */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpRelacional pexprelacionalNode1;
        {
            // Block
        PExpAditiva pexpaditivaNode2;
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        pexpaditivaNode2 = (PExpAditiva)nodeArrayList1.get(0);
        {
            // Block
        }

        pexprelacionalNode1 = new AExpRelacional(pexpaditivaNode2, listNode3);
        }
	nodeList.add(pexprelacionalNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new67() /* reduce AAexprelacional2ExpRelacional */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpRelacional pexprelacionalNode1;
        {
            // Block
        PExpAditiva pexpaditivaNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        pexpaditivaNode2 = (PExpAditiva)nodeArrayList1.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        pexprelacionalNode1 = new AExpRelacional(pexpaditivaNode2, listNode4);
        }
	nodeList.add(pexprelacionalNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new68() /* reduce AMenorExpRelacionalCauda */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpRelacionalCauda pexprelacionalcaudaNode1;
        {
            // Block
        TOpMenor topmenorNode2;
        PExpAditiva pexpaditivaNode3;
        topmenorNode2 = (TOpMenor)nodeArrayList1.get(0);
        pexpaditivaNode3 = (PExpAditiva)nodeArrayList2.get(0);

        pexprelacionalcaudaNode1 = new AMenorExpRelacionalCauda(topmenorNode2, pexpaditivaNode3);
        }
	nodeList.add(pexprelacionalcaudaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new69() /* reduce AMaiorExpRelacionalCauda */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpRelacionalCauda pexprelacionalcaudaNode1;
        {
            // Block
        TOpMaior topmaiorNode2;
        PExpAditiva pexpaditivaNode3;
        topmaiorNode2 = (TOpMaior)nodeArrayList1.get(0);
        pexpaditivaNode3 = (PExpAditiva)nodeArrayList2.get(0);

        pexprelacionalcaudaNode1 = new AMaiorExpRelacionalCauda(topmaiorNode2, pexpaditivaNode3);
        }
	nodeList.add(pexprelacionalcaudaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new70() /* reduce AMenorIgualExpRelacionalCauda */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpRelacionalCauda pexprelacionalcaudaNode1;
        {
            // Block
        TOpMenorIgual topmenorigualNode2;
        PExpAditiva pexpaditivaNode3;
        topmenorigualNode2 = (TOpMenorIgual)nodeArrayList1.get(0);
        pexpaditivaNode3 = (PExpAditiva)nodeArrayList2.get(0);

        pexprelacionalcaudaNode1 = new AMenorIgualExpRelacionalCauda(topmenorigualNode2, pexpaditivaNode3);
        }
	nodeList.add(pexprelacionalcaudaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new71() /* reduce AMaiorIgualExpRelacionalCauda */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpRelacionalCauda pexprelacionalcaudaNode1;
        {
            // Block
        TOpMaiorIgual topmaiorigualNode2;
        PExpAditiva pexpaditivaNode3;
        topmaiorigualNode2 = (TOpMaiorIgual)nodeArrayList1.get(0);
        pexpaditivaNode3 = (PExpAditiva)nodeArrayList2.get(0);

        pexprelacionalcaudaNode1 = new AMaiorIgualExpRelacionalCauda(topmaiorigualNode2, pexpaditivaNode3);
        }
	nodeList.add(pexprelacionalcaudaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new72() /* reduce AAexpaditiva1ExpAditiva */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpAditiva pexpaditivaNode1;
        {
            // Block
        PExpMultiplicativa pexpmultiplicativaNode2;
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        pexpmultiplicativaNode2 = (PExpMultiplicativa)nodeArrayList1.get(0);
        {
            // Block
        }

        pexpaditivaNode1 = new AExpAditiva(pexpmultiplicativaNode2, listNode3);
        }
	nodeList.add(pexpaditivaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new73() /* reduce AAexpaditiva2ExpAditiva */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpAditiva pexpaditivaNode1;
        {
            // Block
        PExpMultiplicativa pexpmultiplicativaNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        pexpmultiplicativaNode2 = (PExpMultiplicativa)nodeArrayList1.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        pexpaditivaNode1 = new AExpAditiva(pexpmultiplicativaNode2, listNode4);
        }
	nodeList.add(pexpaditivaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new74() /* reduce ASomaExpAditivaCauda */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpAditivaCauda pexpaditivacaudaNode1;
        {
            // Block
        TOpMais topmaisNode2;
        PExpMultiplicativa pexpmultiplicativaNode3;
        topmaisNode2 = (TOpMais)nodeArrayList1.get(0);
        pexpmultiplicativaNode3 = (PExpMultiplicativa)nodeArrayList2.get(0);

        pexpaditivacaudaNode1 = new ASomaExpAditivaCauda(topmaisNode2, pexpmultiplicativaNode3);
        }
	nodeList.add(pexpaditivacaudaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new75() /* reduce ASubtracaoExpAditivaCauda */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpAditivaCauda pexpaditivacaudaNode1;
        {
            // Block
        TOpMenos topmenosNode2;
        PExpMultiplicativa pexpmultiplicativaNode3;
        topmenosNode2 = (TOpMenos)nodeArrayList1.get(0);
        pexpmultiplicativaNode3 = (PExpMultiplicativa)nodeArrayList2.get(0);

        pexpaditivacaudaNode1 = new ASubtracaoExpAditivaCauda(topmenosNode2, pexpmultiplicativaNode3);
        }
	nodeList.add(pexpaditivacaudaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new76() /* reduce AAexpmultiplicativa1ExpMultiplicativa */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpMultiplicativa pexpmultiplicativaNode1;
        {
            // Block
        PExpUnaria pexpunariaNode2;
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        pexpunariaNode2 = (PExpUnaria)nodeArrayList1.get(0);
        {
            // Block
        }

        pexpmultiplicativaNode1 = new AExpMultiplicativa(pexpunariaNode2, listNode3);
        }
	nodeList.add(pexpmultiplicativaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new77() /* reduce AAexpmultiplicativa2ExpMultiplicativa */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpMultiplicativa pexpmultiplicativaNode1;
        {
            // Block
        PExpUnaria pexpunariaNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        pexpunariaNode2 = (PExpUnaria)nodeArrayList1.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        pexpmultiplicativaNode1 = new AExpMultiplicativa(pexpunariaNode2, listNode4);
        }
	nodeList.add(pexpmultiplicativaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new78() /* reduce AMultiplicacaoExpMultiplicativaCauda */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpMultiplicativaCauda pexpmultiplicativacaudaNode1;
        {
            // Block
        TOpMult topmultNode2;
        PExpUnaria pexpunariaNode3;
        topmultNode2 = (TOpMult)nodeArrayList1.get(0);
        pexpunariaNode3 = (PExpUnaria)nodeArrayList2.get(0);

        pexpmultiplicativacaudaNode1 = new AMultiplicacaoExpMultiplicativaCauda(topmultNode2, pexpunariaNode3);
        }
	nodeList.add(pexpmultiplicativacaudaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new79() /* reduce ADivisaoExpMultiplicativaCauda */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpMultiplicativaCauda pexpmultiplicativacaudaNode1;
        {
            // Block
        TOpDiv topdivNode2;
        PExpUnaria pexpunariaNode3;
        topdivNode2 = (TOpDiv)nodeArrayList1.get(0);
        pexpunariaNode3 = (PExpUnaria)nodeArrayList2.get(0);

        pexpmultiplicativacaudaNode1 = new ADivisaoExpMultiplicativaCauda(topdivNode2, pexpunariaNode3);
        }
	nodeList.add(pexpmultiplicativacaudaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new80() /* reduce ANaoExpUnaria */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpUnaria pexpunariaNode1;
        {
            // Block
        TOpNao topnaoNode2;
        PExpUnaria pexpunariaNode3;
        topnaoNode2 = (TOpNao)nodeArrayList1.get(0);
        pexpunariaNode3 = (PExpUnaria)nodeArrayList2.get(0);

        pexpunariaNode1 = new ANaoExpUnaria(topnaoNode2, pexpunariaNode3);
        }
	nodeList.add(pexpunariaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new81() /* reduce ANegativoExpUnaria */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpUnaria pexpunariaNode1;
        {
            // Block
        TOpMenos topmenosNode2;
        PExpUnaria pexpunariaNode3;
        topmenosNode2 = (TOpMenos)nodeArrayList1.get(0);
        pexpunariaNode3 = (PExpUnaria)nodeArrayList2.get(0);

        pexpunariaNode1 = new ANegativoExpUnaria(topmenosNode2, pexpunariaNode3);
        }
	nodeList.add(pexpunariaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new82() /* reduce APrimariaExpUnaria */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpUnaria pexpunariaNode1;
        {
            // Block
        PExpPrimaria pexpprimariaNode2;
        pexpprimariaNode2 = (PExpPrimaria)nodeArrayList1.get(0);

        pexpunariaNode1 = new APrimariaExpUnaria(pexpprimariaNode2);
        }
	nodeList.add(pexpunariaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new83() /* reduce ANumeroExpPrimaria */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpPrimaria pexpprimariaNode1;
        {
            // Block
        TNumero tnumeroNode2;
        tnumeroNode2 = (TNumero)nodeArrayList1.get(0);

        pexpprimariaNode1 = new ANumeroExpPrimaria(tnumeroNode2);
        }
	nodeList.add(pexpprimariaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new84() /* reduce ACaractereExpPrimaria */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpPrimaria pexpprimariaNode1;
        {
            // Block
        TCaractere tcaractereNode2;
        tcaractereNode2 = (TCaractere)nodeArrayList1.get(0);

        pexpprimariaNode1 = new ACaractereExpPrimaria(tcaractereNode2);
        }
	nodeList.add(pexpprimariaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new85() /* reduce AStringExpPrimaria */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpPrimaria pexpprimariaNode1;
        {
            // Block
        TString tstringNode2;
        tstringNode2 = (TString)nodeArrayList1.get(0);

        pexpprimariaNode1 = new AStringExpPrimaria(tstringNode2);
        }
	nodeList.add(pexpprimariaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new86() /* reduce ABooleanoExpPrimaria */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpPrimaria pexpprimariaNode1;
        {
            // Block
        TBooleano tbooleanoNode2;
        tbooleanoNode2 = (TBooleano)nodeArrayList1.get(0);

        pexpprimariaNode1 = new ABooleanoExpPrimaria(tbooleanoNode2);
        }
	nodeList.add(pexpprimariaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new87() /* reduce AVarExpPrimaria */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpPrimaria pexpprimariaNode1;
        {
            // Block
        PVar pvarNode2;
        pvarNode2 = (PVar)nodeArrayList1.get(0);

        pexpprimariaNode1 = new AVarExpPrimaria(pvarNode2);
        }
	nodeList.add(pexpprimariaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new88() /* reduce AChamadaExpPrimaria */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpPrimaria pexpprimariaNode1;
        {
            // Block
        PChamada pchamadaNode2;
        pchamadaNode2 = (PChamada)nodeArrayList1.get(0);

        pexpprimariaNode1 = new AChamadaExpPrimaria(pchamadaNode2);
        }
	nodeList.add(pexpprimariaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new89() /* reduce AParentesesExpPrimaria */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpPrimaria pexpprimariaNode1;
        {
            // Block
        TAbreParenteses tabreparentesesNode2;
        PExp pexpNode3;
        TFechaParenteses tfechaparentesesNode4;
        tabreparentesesNode2 = (TAbreParenteses)nodeArrayList1.get(0);
        pexpNode3 = (PExp)nodeArrayList2.get(0);
        tfechaparentesesNode4 = (TFechaParenteses)nodeArrayList3.get(0);

        pexpprimariaNode1 = new AParentesesExpPrimaria(tabreparentesesNode2, pexpNode3, tfechaparentesesNode4);
        }
	nodeList.add(pexpprimariaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new90() /* reduce AAchamada1Chamada */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PChamada pchamadaNode1;
        {
            // Block
        TIdentificador tidentificadorNode2;
        TAbreParenteses tabreparentesesNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        TFechaParenteses tfechaparentesesNode5;
        tidentificadorNode2 = (TIdentificador)nodeArrayList1.get(0);
        tabreparentesesNode3 = (TAbreParenteses)nodeArrayList2.get(0);
        tfechaparentesesNode5 = (TFechaParenteses)nodeArrayList3.get(0);

        pchamadaNode1 = new AChamada(tidentificadorNode2, tabreparentesesNode3, null, tfechaparentesesNode5);
        }
	nodeList.add(pchamadaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new91() /* reduce AAchamada2Chamada */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PChamada pchamadaNode1;
        {
            // Block
        TIdentificador tidentificadorNode2;
        TAbreParenteses tabreparentesesNode3;
        PListaExp plistaexpNode4;
        TFechaParenteses tfechaparentesesNode5;
        tidentificadorNode2 = (TIdentificador)nodeArrayList1.get(0);
        tabreparentesesNode3 = (TAbreParenteses)nodeArrayList2.get(0);
        plistaexpNode4 = (PListaExp)nodeArrayList3.get(0);
        tfechaparentesesNode5 = (TFechaParenteses)nodeArrayList4.get(0);

        pchamadaNode1 = new AChamada(tidentificadorNode2, tabreparentesesNode3, plistaexpNode4, tfechaparentesesNode5);
        }
	nodeList.add(pchamadaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new92() /* reduce AAlistaexp1ListaExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PListaExp plistaexpNode1;
        {
            // Block
        PExp pexpNode2;
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        pexpNode2 = (PExp)nodeArrayList1.get(0);
        {
            // Block
        }

        plistaexpNode1 = new AListaExp(pexpNode2, listNode3);
        }
	nodeList.add(plistaexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new93() /* reduce AAlistaexp2ListaExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PListaExp plistaexpNode1;
        {
            // Block
        PExp pexpNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        pexpNode2 = (PExp)nodeArrayList1.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        plistaexpNode1 = new AListaExp(pexpNode2, listNode4);
        }
	nodeList.add(plistaexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new94() /* reduce AListaExpCauda */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PListaExpCauda plistaexpcaudaNode1;
        {
            // Block
        TBarraVertical tbarraverticalNode2;
        PExp pexpNode3;
        tbarraverticalNode2 = (TBarraVertical)nodeArrayList1.get(0);
        pexpNode3 = (PExp)nodeArrayList2.get(0);

        plistaexpcaudaNode1 = new AListaExpCauda(tbarraverticalNode2, pexpNode3);
        }
	nodeList.add(plistaexpcaudaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new95() /* reduce ATerminal$Declaracao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PDeclaracao pdeclaracaoNode1;
        pdeclaracaoNode1 = (PDeclaracao)nodeArrayList1.get(0);
	if(pdeclaracaoNode1 != null)
	{
	  listNode2.add(pdeclaracaoNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new96() /* reduce ANonTerminal$Declaracao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PDeclaracao pdeclaracaoNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pdeclaracaoNode2 = (PDeclaracao)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pdeclaracaoNode2 != null)
	{
	  listNode3.add(pdeclaracaoNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new97() /* reduce ATerminal$ListaNomesCauda */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PListaNomesCauda plistanomescaudaNode1;
        plistanomescaudaNode1 = (PListaNomesCauda)nodeArrayList1.get(0);
	if(plistanomescaudaNode1 != null)
	{
	  listNode2.add(plistanomescaudaNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new98() /* reduce ANonTerminal$ListaNomesCauda */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PListaNomesCauda plistanomescaudaNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        plistanomescaudaNode2 = (PListaNomesCauda)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(plistanomescaudaNode2 != null)
	{
	  listNode3.add(plistanomescaudaNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new99() /* reduce ATerminal$VetorDimensoes */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PVetorDimensoes pvetordimensoesNode1;
        pvetordimensoesNode1 = (PVetorDimensoes)nodeArrayList1.get(0);
	if(pvetordimensoesNode1 != null)
	{
	  listNode2.add(pvetordimensoesNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new100() /* reduce ANonTerminal$VetorDimensoes */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PVetorDimensoes pvetordimensoesNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pvetordimensoesNode2 = (PVetorDimensoes)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pvetordimensoesNode2 != null)
	{
	  listNode3.add(pvetordimensoesNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new101() /* reduce ATerminal$ParametroCauda */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PParametroCauda pparametrocaudaNode1;
        pparametrocaudaNode1 = (PParametroCauda)nodeArrayList1.get(0);
	if(pparametrocaudaNode1 != null)
	{
	  listNode2.add(pparametrocaudaNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new102() /* reduce ANonTerminal$ParametroCauda */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PParametroCauda pparametrocaudaNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pparametrocaudaNode2 = (PParametroCauda)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pparametrocaudaNode2 != null)
	{
	  listNode3.add(pparametrocaudaNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new103() /* reduce ATerminal$DecVariavel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PDecVariavel pdecvariavelNode1;
        pdecvariavelNode1 = (PDecVariavel)nodeArrayList1.get(0);
	if(pdecvariavelNode1 != null)
	{
	  listNode2.add(pdecvariavelNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new104() /* reduce ANonTerminal$DecVariavel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PDecVariavel pdecvariavelNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pdecvariavelNode2 = (PDecVariavel)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pdecvariavelNode2 != null)
	{
	  listNode3.add(pdecvariavelNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new105() /* reduce ATerminal$Comando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PComando pcomandoNode1;
        pcomandoNode1 = (PComando)nodeArrayList1.get(0);
	if(pcomandoNode1 != null)
	{
	  listNode2.add(pcomandoNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new106() /* reduce ANonTerminal$Comando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PComando pcomandoNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pcomandoNode2 = (PComando)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pcomandoNode2 != null)
	{
	  listNode3.add(pcomandoNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new107() /* reduce ATerminal$ListaAtribCauda */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PListaAtribCauda plistaatribcaudaNode1;
        plistaatribcaudaNode1 = (PListaAtribCauda)nodeArrayList1.get(0);
	if(plistaatribcaudaNode1 != null)
	{
	  listNode2.add(plistaatribcaudaNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new108() /* reduce ANonTerminal$ListaAtribCauda */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PListaAtribCauda plistaatribcaudaNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        plistaatribcaudaNode2 = (PListaAtribCauda)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(plistaatribcaudaNode2 != null)
	{
	  listNode3.add(plistaatribcaudaNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new109() /* reduce ATerminal$VarIndexada */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PVarIndexada pvarindexadaNode1;
        pvarindexadaNode1 = (PVarIndexada)nodeArrayList1.get(0);
	if(pvarindexadaNode1 != null)
	{
	  listNode2.add(pvarindexadaNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new110() /* reduce ANonTerminal$VarIndexada */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PVarIndexada pvarindexadaNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pvarindexadaNode2 = (PVarIndexada)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pvarindexadaNode2 != null)
	{
	  listNode3.add(pvarindexadaNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new111() /* reduce ATerminal$ListaVarCauda */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PListaVarCauda plistavarcaudaNode1;
        plistavarcaudaNode1 = (PListaVarCauda)nodeArrayList1.get(0);
	if(plistavarcaudaNode1 != null)
	{
	  listNode2.add(plistavarcaudaNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new112() /* reduce ANonTerminal$ListaVarCauda */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PListaVarCauda plistavarcaudaNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        plistavarcaudaNode2 = (PListaVarCauda)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(plistavarcaudaNode2 != null)
	{
	  listNode3.add(plistavarcaudaNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new113() /* reduce ATerminal$ExpOuCauda */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PExpOuCauda pexpoucaudaNode1;
        pexpoucaudaNode1 = (PExpOuCauda)nodeArrayList1.get(0);
	if(pexpoucaudaNode1 != null)
	{
	  listNode2.add(pexpoucaudaNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new114() /* reduce ANonTerminal$ExpOuCauda */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PExpOuCauda pexpoucaudaNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pexpoucaudaNode2 = (PExpOuCauda)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pexpoucaudaNode2 != null)
	{
	  listNode3.add(pexpoucaudaNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new115() /* reduce ATerminal$ExpECauda */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PExpECauda pexpecaudaNode1;
        pexpecaudaNode1 = (PExpECauda)nodeArrayList1.get(0);
	if(pexpecaudaNode1 != null)
	{
	  listNode2.add(pexpecaudaNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new116() /* reduce ANonTerminal$ExpECauda */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PExpECauda pexpecaudaNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pexpecaudaNode2 = (PExpECauda)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pexpecaudaNode2 != null)
	{
	  listNode3.add(pexpecaudaNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new117() /* reduce ATerminal$ExpIgualdadeCauda */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PExpIgualdadeCauda pexpigualdadecaudaNode1;
        pexpigualdadecaudaNode1 = (PExpIgualdadeCauda)nodeArrayList1.get(0);
	if(pexpigualdadecaudaNode1 != null)
	{
	  listNode2.add(pexpigualdadecaudaNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new118() /* reduce ANonTerminal$ExpIgualdadeCauda */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PExpIgualdadeCauda pexpigualdadecaudaNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pexpigualdadecaudaNode2 = (PExpIgualdadeCauda)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pexpigualdadecaudaNode2 != null)
	{
	  listNode3.add(pexpigualdadecaudaNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new119() /* reduce ATerminal$ExpRelacionalCauda */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PExpRelacionalCauda pexprelacionalcaudaNode1;
        pexprelacionalcaudaNode1 = (PExpRelacionalCauda)nodeArrayList1.get(0);
	if(pexprelacionalcaudaNode1 != null)
	{
	  listNode2.add(pexprelacionalcaudaNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new120() /* reduce ANonTerminal$ExpRelacionalCauda */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PExpRelacionalCauda pexprelacionalcaudaNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pexprelacionalcaudaNode2 = (PExpRelacionalCauda)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pexprelacionalcaudaNode2 != null)
	{
	  listNode3.add(pexprelacionalcaudaNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new121() /* reduce ATerminal$ExpAditivaCauda */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PExpAditivaCauda pexpaditivacaudaNode1;
        pexpaditivacaudaNode1 = (PExpAditivaCauda)nodeArrayList1.get(0);
	if(pexpaditivacaudaNode1 != null)
	{
	  listNode2.add(pexpaditivacaudaNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new122() /* reduce ANonTerminal$ExpAditivaCauda */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PExpAditivaCauda pexpaditivacaudaNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pexpaditivacaudaNode2 = (PExpAditivaCauda)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pexpaditivacaudaNode2 != null)
	{
	  listNode3.add(pexpaditivacaudaNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new123() /* reduce ATerminal$ExpMultiplicativaCauda */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PExpMultiplicativaCauda pexpmultiplicativacaudaNode1;
        pexpmultiplicativacaudaNode1 = (PExpMultiplicativaCauda)nodeArrayList1.get(0);
	if(pexpmultiplicativacaudaNode1 != null)
	{
	  listNode2.add(pexpmultiplicativacaudaNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new124() /* reduce ANonTerminal$ExpMultiplicativaCauda */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PExpMultiplicativaCauda pexpmultiplicativacaudaNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pexpmultiplicativacaudaNode2 = (PExpMultiplicativaCauda)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pexpmultiplicativacaudaNode2 != null)
	{
	  listNode3.add(pexpmultiplicativacaudaNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new125() /* reduce ATerminal$ListaExpCauda */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PListaExpCauda plistaexpcaudaNode1;
        plistaexpcaudaNode1 = (PListaExpCauda)nodeArrayList1.get(0);
	if(plistaexpcaudaNode1 != null)
	{
	  listNode2.add(plistaexpcaudaNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new126() /* reduce ANonTerminal$ListaExpCauda */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PListaExpCauda plistaexpcaudaNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        plistaexpcaudaNode2 = (PListaExpCauda)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(plistaexpcaudaNode2 != null)
	{
	  listNode3.add(plistaexpcaudaNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    private static int[][][] actionTable;
/*      {
			{{-1, REDUCE, 0}, {0, SHIFT, 1}, {1, SHIFT, 2}, {2, SHIFT, 3}, {3, SHIFT, 4}, {5, SHIFT, 5}, {33, SHIFT, 6}, },
			{{-1, REDUCE, 11}, },
			{{-1, REDUCE, 12}, },
			{{-1, REDUCE, 10}, },
			{{-1, ERROR, 4}, {0, SHIFT, 1}, {1, SHIFT, 2}, {2, SHIFT, 3}, },
			{{-1, ERROR, 5}, {15, SHIFT, 15}, },
			{{-1, ERROR, 6}, {0, SHIFT, 1}, {1, SHIFT, 2}, {2, SHIFT, 3}, {3, SHIFT, 4}, {5, SHIFT, 16}, },
			{{-1, ERROR, 7}, {43, ACCEPT, -1}, },
			{{-1, REDUCE, 95}, },
			{{-1, REDUCE, 2}, },
			{{-1, ERROR, 10}, {15, SHIFT, 18}, },
			{{-1, REDUCE, 8}, },
			{{-1, REDUCE, 3}, },
			{{-1, REDUCE, 1}, {0, SHIFT, 1}, {1, SHIFT, 2}, {2, SHIFT, 3}, {3, SHIFT, 4}, {5, SHIFT, 5}, {33, SHIFT, 6}, },
			{{-1, ERROR, 14}, {40, SHIFT, 21}, },
			{{-1, ERROR, 15}, {38, SHIFT, 24}, },
			{{-1, ERROR, 16}, {15, SHIFT, 25}, },
			{{-1, ERROR, 17}, {15, SHIFT, 26}, },
			{{-1, REDUCE, 5}, {35, SHIFT, 27}, {38, SHIFT, 28}, },
			{{-1, ERROR, 19}, {34, SHIFT, 31}, },
			{{-1, REDUCE, 96}, },
			{{-1, ERROR, 21}, {15, SHIFT, 32}, {16, SHIFT, 33}, {17, SHIFT, 34}, {18, SHIFT, 35}, {19, SHIFT, 36}, {21, SHIFT, 37}, {29, SHIFT, 38}, {38, SHIFT, 39}, },
			{{-1, REDUCE, 99}, },
			{{-1, REDUCE, 9}, {40, SHIFT, 21}, },
			{{-1, ERROR, 24}, {0, SHIFT, 1}, {1, SHIFT, 2}, {2, SHIFT, 3}, {3, SHIFT, 4}, {39, SHIFT, 52}, },
			{{-1, ERROR, 25}, {38, SHIFT, 56}, },
			{{-1, ERROR, 26}, {38, SHIFT, 57}, },
			{{-1, ERROR, 27}, {15, SHIFT, 58}, },
			{{-1, ERROR, 28}, {0, SHIFT, 1}, {1, SHIFT, 2}, {2, SHIFT, 3}, {3, SHIFT, 4}, {39, SHIFT, 59}, },
			{{-1, REDUCE, 97}, },
			{{-1, REDUCE, 6}, {35, SHIFT, 27}, },
			{{-1, REDUCE, 4}, },
			{{-1, REDUCE, 50}, {38, SHIFT, 62}, {40, SHIFT, 63}, },
			{{-1, REDUCE, 84}, },
			{{-1, REDUCE, 85}, },
			{{-1, REDUCE, 86}, },
			{{-1, REDUCE, 83}, },
			{{-1, ERROR, 37}, {15, SHIFT, 32}, {16, SHIFT, 33}, {17, SHIFT, 34}, {18, SHIFT, 35}, {19, SHIFT, 36}, {21, SHIFT, 37}, {29, SHIFT, 38}, {38, SHIFT, 39}, },
			{{-1, ERROR, 38}, {15, SHIFT, 32}, {16, SHIFT, 33}, {17, SHIFT, 34}, {18, SHIFT, 35}, {19, SHIFT, 36}, {21, SHIFT, 37}, {29, SHIFT, 38}, {38, SHIFT, 39}, },
			{{-1, ERROR, 39}, {15, SHIFT, 32}, {16, SHIFT, 33}, {17, SHIFT, 34}, {18, SHIFT, 35}, {19, SHIFT, 36}, {21, SHIFT, 37}, {29, SHIFT, 38}, {38, SHIFT, 39}, },
			{{-1, REDUCE, 87}, },
			{{-1, ERROR, 41}, {41, SHIFT, 69}, },
			{{-1, REDUCE, 56}, },
			{{-1, REDUCE, 57}, {31, SHIFT, 70}, },
			{{-1, REDUCE, 60}, {30, SHIFT, 73}, },
			{{-1, REDUCE, 63}, {28, SHIFT, 76}, },
			{{-1, REDUCE, 66}, {24, SHIFT, 79}, {25, SHIFT, 80}, {26, SHIFT, 81}, {27, SHIFT, 82}, },
			{{-1, REDUCE, 72}, {20, SHIFT, 85}, {21, SHIFT, 86}, },
			{{-1, REDUCE, 76}, {22, SHIFT, 89}, {23, SHIFT, 90}, },
			{{-1, REDUCE, 82}, },
			{{-1, REDUCE, 88}, },
			{{-1, REDUCE, 100}, },
			{{-1, ERROR, 52}, {6, SHIFT, 93}, },
			{{-1, ERROR, 53}, {15, SHIFT, 95}, },
			{{-1, ERROR, 54}, {39, SHIFT, 96}, },
			{{-1, REDUCE, 22}, {42, SHIFT, 97}, },
			{{-1, ERROR, 56}, {0, SHIFT, 1}, {1, SHIFT, 2}, {2, SHIFT, 3}, {3, SHIFT, 4}, {39, SHIFT, 100}, },
			{{-1, ERROR, 57}, {0, SHIFT, 1}, {1, SHIFT, 2}, {2, SHIFT, 3}, {3, SHIFT, 4}, {39, SHIFT, 102}, },
			{{-1, REDUCE, 7}, },
			{{-1, ERROR, 59}, {6, SHIFT, 93}, },
			{{-1, ERROR, 60}, {39, SHIFT, 105}, },
			{{-1, REDUCE, 98}, },
			{{-1, ERROR, 62}, {15, SHIFT, 32}, {16, SHIFT, 33}, {17, SHIFT, 34}, {18, SHIFT, 35}, {19, SHIFT, 36}, {21, SHIFT, 37}, {29, SHIFT, 38}, {38, SHIFT, 39}, {39, SHIFT, 106}, },
			{{-1, ERROR, 63}, {15, SHIFT, 32}, {16, SHIFT, 33}, {17, SHIFT, 34}, {18, SHIFT, 35}, {19, SHIFT, 36}, {21, SHIFT, 37}, {29, SHIFT, 38}, {38, SHIFT, 39}, },
			{{-1, REDUCE, 109}, },
			{{-1, REDUCE, 51}, {40, SHIFT, 63}, },
			{{-1, REDUCE, 81}, },
			{{-1, REDUCE, 80}, },
			{{-1, ERROR, 68}, {39, SHIFT, 111}, },
			{{-1, REDUCE, 13}, },
			{{-1, ERROR, 70}, {15, SHIFT, 32}, {16, SHIFT, 33}, {17, SHIFT, 34}, {18, SHIFT, 35}, {19, SHIFT, 36}, {21, SHIFT, 37}, {29, SHIFT, 38}, {38, SHIFT, 39}, },
			{{-1, REDUCE, 113}, },
			{{-1, REDUCE, 58}, {31, SHIFT, 70}, },
			{{-1, ERROR, 73}, {15, SHIFT, 32}, {16, SHIFT, 33}, {17, SHIFT, 34}, {18, SHIFT, 35}, {19, SHIFT, 36}, {21, SHIFT, 37}, {29, SHIFT, 38}, {38, SHIFT, 39}, },
			{{-1, REDUCE, 115}, },
			{{-1, REDUCE, 61}, {30, SHIFT, 73}, },
			{{-1, ERROR, 76}, {15, SHIFT, 32}, {16, SHIFT, 33}, {17, SHIFT, 34}, {18, SHIFT, 35}, {19, SHIFT, 36}, {21, SHIFT, 37}, {29, SHIFT, 38}, {38, SHIFT, 39}, },
			{{-1, REDUCE, 117}, },
			{{-1, REDUCE, 64}, {28, SHIFT, 76}, },
			{{-1, ERROR, 79}, {15, SHIFT, 32}, {16, SHIFT, 33}, {17, SHIFT, 34}, {18, SHIFT, 35}, {19, SHIFT, 36}, {21, SHIFT, 37}, {29, SHIFT, 38}, {38, SHIFT, 39}, },
			{{-1, ERROR, 80}, {15, SHIFT, 32}, {16, SHIFT, 33}, {17, SHIFT, 34}, {18, SHIFT, 35}, {19, SHIFT, 36}, {21, SHIFT, 37}, {29, SHIFT, 38}, {38, SHIFT, 39}, },
			{{-1, ERROR, 81}, {15, SHIFT, 32}, {16, SHIFT, 33}, {17, SHIFT, 34}, {18, SHIFT, 35}, {19, SHIFT, 36}, {21, SHIFT, 37}, {29, SHIFT, 38}, {38, SHIFT, 39}, },
			{{-1, ERROR, 82}, {15, SHIFT, 32}, {16, SHIFT, 33}, {17, SHIFT, 34}, {18, SHIFT, 35}, {19, SHIFT, 36}, {21, SHIFT, 37}, {29, SHIFT, 38}, {38, SHIFT, 39}, },
			{{-1, REDUCE, 119}, },
			{{-1, REDUCE, 67}, {24, SHIFT, 79}, {25, SHIFT, 80}, {26, SHIFT, 81}, {27, SHIFT, 82}, },
			{{-1, ERROR, 85}, {15, SHIFT, 32}, {16, SHIFT, 33}, {17, SHIFT, 34}, {18, SHIFT, 35}, {19, SHIFT, 36}, {21, SHIFT, 37}, {29, SHIFT, 38}, {38, SHIFT, 39}, },
			{{-1, ERROR, 86}, {15, SHIFT, 32}, {16, SHIFT, 33}, {17, SHIFT, 34}, {18, SHIFT, 35}, {19, SHIFT, 36}, {21, SHIFT, 37}, {29, SHIFT, 38}, {38, SHIFT, 39}, },
			{{-1, REDUCE, 121}, },
			{{-1, REDUCE, 73}, {20, SHIFT, 85}, {21, SHIFT, 86}, },
			{{-1, ERROR, 89}, {15, SHIFT, 32}, {16, SHIFT, 33}, {17, SHIFT, 34}, {18, SHIFT, 35}, {19, SHIFT, 36}, {21, SHIFT, 37}, {29, SHIFT, 38}, {38, SHIFT, 39}, },
			{{-1, ERROR, 90}, {15, SHIFT, 32}, {16, SHIFT, 33}, {17, SHIFT, 34}, {18, SHIFT, 35}, {19, SHIFT, 36}, {21, SHIFT, 37}, {29, SHIFT, 38}, {38, SHIFT, 39}, },
			{{-1, REDUCE, 123}, },
			{{-1, REDUCE, 77}, {22, SHIFT, 89}, {23, SHIFT, 90}, },
			{{-1, ERROR, 93}, {0, SHIFT, 1}, {1, SHIFT, 2}, {2, SHIFT, 3}, {3, SHIFT, 4}, {4, SHIFT, 129}, {7, SHIFT, 130}, {8, SHIFT, 131}, {10, SHIFT, 132}, {11, SHIFT, 133}, {12, SHIFT, 134}, {13, SHIFT, 135}, {14, SHIFT, 136}, {15, SHIFT, 32}, },
			{{-1, REDUCE, 15}, },
			{{-1, REDUCE, 25}, },
			{{-1, ERROR, 96}, {6, SHIFT, 93}, },
			{{-1, ERROR, 97}, {0, SHIFT, 1}, {1, SHIFT, 2}, {2, SHIFT, 3}, {3, SHIFT, 4}, },
			{{-1, REDUCE, 101}, },
			{{-1, REDUCE, 23}, {42, SHIFT, 97}, },
			{{-1, ERROR, 100}, {6, SHIFT, 93}, },
			{{-1, ERROR, 101}, {39, SHIFT, 150}, },
			{{-1, ERROR, 102}, {6, SHIFT, 93}, },
			{{-1, ERROR, 103}, {39, SHIFT, 152}, },
			{{-1, REDUCE, 14}, },
			{{-1, ERROR, 105}, {6, SHIFT, 93}, },
			{{-1, REDUCE, 90}, },
			{{-1, REDUCE, 92}, {42, SHIFT, 154}, },
			{{-1, ERROR, 108}, {39, SHIFT, 157}, },
			{{-1, ERROR, 109}, {41, SHIFT, 158}, },
			{{-1, REDUCE, 110}, },
			{{-1, REDUCE, 89}, },
			{{-1, REDUCE, 59}, },
			{{-1, REDUCE, 114}, },
			{{-1, REDUCE, 62}, },
			{{-1, REDUCE, 116}, },
			{{-1, REDUCE, 65}, },
			{{-1, REDUCE, 118}, },
			{{-1, REDUCE, 69}, },
			{{-1, REDUCE, 68}, },
			{{-1, REDUCE, 71}, },
			{{-1, REDUCE, 70}, },
			{{-1, REDUCE, 120}, },
			{{-1, REDUCE, 74}, },
			{{-1, REDUCE, 75}, },
			{{-1, REDUCE, 122}, },
			{{-1, REDUCE, 78}, },
			{{-1, REDUCE, 79}, },
			{{-1, REDUCE, 124}, },
			{{-1, ERROR, 129}, {15, SHIFT, 32}, {16, SHIFT, 33}, {17, SHIFT, 34}, {18, SHIFT, 35}, {19, SHIFT, 36}, {21, SHIFT, 37}, {29, SHIFT, 38}, {34, SHIFT, 159}, {38, SHIFT, 39}, },
			{{-1, REDUCE, 26}, },
			{{-1, ERROR, 131}, {38, SHIFT, 161}, },
			{{-1, ERROR, 132}, {38, SHIFT, 162}, },
			{{-1, ERROR, 133}, {38, SHIFT, 163}, },
			{{-1, ERROR, 134}, {38, SHIFT, 164}, },
			{{-1, ERROR, 135}, {38, SHIFT, 165}, },
			{{-1, ERROR, 136}, {38, SHIFT, 166}, },
			{{-1, REDUCE, 103}, },
			{{-1, ERROR, 138}, {15, SHIFT, 167}, },
			{{-1, REDUCE, 105}, },
			{{-1, REDUCE, 35}, },
			{{-1, ERROR, 141}, {34, SHIFT, 168}, },
			{{-1, ERROR, 142}, {32, SHIFT, 169}, },
			{{-1, ERROR, 143}, {34, SHIFT, 170}, },
			{{-1, ERROR, 144}, {0, SHIFT, 1}, {1, SHIFT, 2}, {2, SHIFT, 3}, {3, SHIFT, 4}, {4, SHIFT, 129}, {7, SHIFT, 171}, {8, SHIFT, 131}, {10, SHIFT, 132}, {11, SHIFT, 133}, {12, SHIFT, 134}, {13, SHIFT, 135}, {14, SHIFT, 136}, {15, SHIFT, 32}, },
			{{-1, ERROR, 145}, {4, SHIFT, 129}, {7, SHIFT, 174}, {8, SHIFT, 131}, {10, SHIFT, 132}, {11, SHIFT, 133}, {12, SHIFT, 134}, {13, SHIFT, 135}, {14, SHIFT, 136}, {15, SHIFT, 32}, },
			{{-1, REDUCE, 19}, },
			{{-1, REDUCE, 24}, },
			{{-1, REDUCE, 102}, },
			{{-1, REDUCE, 17}, },
			{{-1, ERROR, 150}, {6, SHIFT, 93}, },
			{{-1, REDUCE, 16}, },
			{{-1, ERROR, 152}, {6, SHIFT, 93}, },
			{{-1, REDUCE, 18}, },
			{{-1, ERROR, 154}, {15, SHIFT, 32}, {16, SHIFT, 33}, {17, SHIFT, 34}, {18, SHIFT, 35}, {19, SHIFT, 36}, {21, SHIFT, 37}, {29, SHIFT, 38}, {38, SHIFT, 39}, },
			{{-1, REDUCE, 125}, },
			{{-1, REDUCE, 93}, {42, SHIFT, 154}, },
			{{-1, REDUCE, 91}, },
			{{-1, REDUCE, 52}, },
			{{-1, REDUCE, 40}, },
			{{-1, ERROR, 160}, {34, SHIFT, 180}, },
			{{-1, ERROR, 161}, {15, SHIFT, 32}, {16, SHIFT, 33}, {17, SHIFT, 34}, {18, SHIFT, 35}, {19, SHIFT, 36}, {21, SHIFT, 37}, {29, SHIFT, 38}, {38, SHIFT, 39}, },
			{{-1, ERROR, 162}, {15, SHIFT, 32}, {16, SHIFT, 33}, {17, SHIFT, 34}, {18, SHIFT, 35}, {19, SHIFT, 36}, {21, SHIFT, 37}, {29, SHIFT, 38}, {38, SHIFT, 39}, },
			{{-1, ERROR, 163}, {15, SHIFT, 183}, },
			{{-1, ERROR, 164}, {0, SHIFT, 1}, {1, SHIFT, 2}, {2, SHIFT, 3}, {3, SHIFT, 4}, },
			{{-1, ERROR, 165}, {15, SHIFT, 32}, {16, SHIFT, 33}, {17, SHIFT, 34}, {18, SHIFT, 35}, {19, SHIFT, 36}, {21, SHIFT, 37}, {29, SHIFT, 38}, {38, SHIFT, 39}, {39, SHIFT, 187}, },
			{{-1, ERROR, 166}, {15, SHIFT, 183}, },
			{{-1, REDUCE, 5}, {35, SHIFT, 27}, },
			{{-1, REDUCE, 39}, },
			{{-1, ERROR, 169}, {15, SHIFT, 32}, {16, SHIFT, 33}, {17, SHIFT, 34}, {18, SHIFT, 35}, {19, SHIFT, 36}, {21, SHIFT, 37}, {29, SHIFT, 38}, {38, SHIFT, 39}, },
			{{-1, REDUCE, 42}, },
			{{-1, REDUCE, 27}, },
			{{-1, REDUCE, 104}, },
			{{-1, ERROR, 173}, {4, SHIFT, 129}, {7, SHIFT, 192}, {8, SHIFT, 131}, {10, SHIFT, 132}, {11, SHIFT, 133}, {12, SHIFT, 134}, {13, SHIFT, 135}, {14, SHIFT, 136}, {15, SHIFT, 32}, },
			{{-1, REDUCE, 28}, },
			{{-1, REDUCE, 106}, },
			{{-1, REDUCE, 21}, },
			{{-1, REDUCE, 20}, },
			{{-1, REDUCE, 94}, },
			{{-1, REDUCE, 126}, },
			{{-1, REDUCE, 41}, },
			{{-1, ERROR, 181}, {39, SHIFT, 193}, },
			{{-1, ERROR, 182}, {39, SHIFT, 194}, },
			{{-1, REDUCE, 50}, {40, SHIFT, 63}, },
			{{-1, REDUCE, 47}, {35, SHIFT, 195}, },
			{{-1, ERROR, 185}, {37, SHIFT, 198}, },
			{{-1, ERROR, 186}, {15, SHIFT, 199}, },
			{{-1, ERROR, 187}, {34, SHIFT, 200}, },
			{{-1, ERROR, 188}, {39, SHIFT, 201}, },
			{{-1, REDUCE, 53}, {35, SHIFT, 202}, },
			{{-1, ERROR, 190}, {39, SHIFT, 205}, },
			{{-1, REDUCE, 46}, },
			{{-1, REDUCE, 29}, },
			{{-1, ERROR, 193}, {4, SHIFT, 129}, {6, SHIFT, 93}, {13, SHIFT, 135}, {14, SHIFT, 136}, {15, SHIFT, 32}, },
			{{-1, ERROR, 194}, {4, SHIFT, 129}, {6, SHIFT, 93}, {13, SHIFT, 135}, {14, SHIFT, 136}, {15, SHIFT, 32}, },
			{{-1, ERROR, 195}, {15, SHIFT, 183}, },
			{{-1, REDUCE, 107}, },
			{{-1, REDUCE, 48}, {35, SHIFT, 195}, },
			{{-1, ERROR, 198}, {15, SHIFT, 32}, {16, SHIFT, 33}, {17, SHIFT, 34}, {18, SHIFT, 35}, {19, SHIFT, 36}, {21, SHIFT, 37}, {29, SHIFT, 38}, {38, SHIFT, 39}, },
			{{-1, ERROR, 199}, {36, SHIFT, 213}, },
			{{-1, REDUCE, 43}, },
			{{-1, ERROR, 201}, {34, SHIFT, 214}, },
			{{-1, ERROR, 202}, {15, SHIFT, 183}, },
			{{-1, REDUCE, 111}, },
			{{-1, REDUCE, 54}, {35, SHIFT, 202}, },
			{{-1, ERROR, 205}, {34, SHIFT, 217}, },
			{{-1, REDUCE, 36}, },
			{{-1, REDUCE, 30}, {9, SHIFT, 218}, },
			{{-1, REDUCE, 37}, },
			{{-1, REDUCE, 32}, },
			{{-1, REDUCE, 49}, },
			{{-1, REDUCE, 108}, },
			{{-1, ERROR, 212}, {37, SHIFT, 220}, },
			{{-1, ERROR, 213}, {15, SHIFT, 221}, },
			{{-1, REDUCE, 44}, },
			{{-1, REDUCE, 55}, },
			{{-1, REDUCE, 112}, },
			{{-1, REDUCE, 45}, },
			{{-1, ERROR, 218}, {4, SHIFT, 129}, {6, SHIFT, 93}, {13, SHIFT, 135}, {14, SHIFT, 136}, {15, SHIFT, 32}, },
			{{-1, REDUCE, 31}, },
			{{-1, ERROR, 220}, {15, SHIFT, 183}, },
			{{-1, ERROR, 221}, {39, SHIFT, 224}, },
			{{-1, REDUCE, 38}, },
			{{-1, ERROR, 223}, {39, SHIFT, 225}, },
			{{-1, ERROR, 224}, {4, SHIFT, 129}, {6, SHIFT, 93}, {13, SHIFT, 135}, {14, SHIFT, 136}, {15, SHIFT, 32}, },
			{{-1, ERROR, 225}, {4, SHIFT, 129}, {6, SHIFT, 93}, {13, SHIFT, 135}, {14, SHIFT, 136}, {15, SHIFT, 32}, },
			{{-1, REDUCE, 34}, },
			{{-1, REDUCE, 33}, },
        };*/
    private static int[][][] gotoTable;
/*      {
			{{-1, 7}, },
			{{-1, 8}, {13, 20}, },
			{{-1, 9}, {93, 137}, {144, 172}, },
			{{-1, 19}, },
			{{-1, 29}, {30, 61}, },
			{{-1, 53}, {0, 10}, {6, 17}, {13, 10}, {93, 138}, {144, 138}, {164, 186}, },
			{{-1, 11}, {4, 14}, },
			{{-1, 22}, {23, 51}, },
			{{-1, 12}, },
			{{-1, 54}, {28, 60}, {56, 101}, {57, 103}, },
			{{-1, 98}, {99, 148}, },
			{{-1, 55}, {97, 147}, },
			{{-1, 206}, {52, 94}, {59, 104}, {96, 146}, {100, 149}, {102, 151}, {105, 153}, {150, 176}, {152, 177}, },
			{{-1, 139}, {145, 175}, {173, 175}, },
			{{-1, 207}, {194, 209}, {218, 222}, {224, 226}, {225, 227}, },
			{{-1, 219}, },
			{{-1, 208}, {93, 140}, {144, 140}, {145, 140}, {173, 140}, },
			{{-1, 141}, {163, 184}, {195, 210}, {220, 184}, },
			{{-1, 185}, {220, 223}, },
			{{-1, 196}, {197, 211}, },
			{{-1, 40}, {93, 142}, {144, 142}, {145, 142}, {163, 142}, {166, 189}, {173, 142}, {193, 142}, {194, 142}, {195, 142}, {202, 215}, {218, 142}, {220, 142}, {224, 142}, {225, 142}, },
			{{-1, 64}, {65, 110}, },
			{{-1, 190}, },
			{{-1, 203}, {204, 216}, },
			{{-1, 107}, {21, 41}, {39, 68}, {63, 109}, {129, 160}, {154, 178}, {161, 181}, {162, 182}, {169, 191}, {198, 212}, },
			{{-1, 42}, },
			{{-1, 71}, {72, 113}, },
			{{-1, 43}, {70, 112}, },
			{{-1, 74}, {75, 115}, },
			{{-1, 44}, {73, 114}, },
			{{-1, 77}, {78, 117}, },
			{{-1, 45}, {76, 116}, },
			{{-1, 83}, {84, 122}, },
			{{-1, 46}, {79, 118}, {80, 119}, {81, 120}, {82, 121}, },
			{{-1, 87}, {88, 125}, },
			{{-1, 47}, {85, 123}, {86, 124}, },
			{{-1, 91}, {92, 128}, },
			{{-1, 48}, {37, 66}, {38, 67}, {89, 126}, {90, 127}, },
			{{-1, 49}, },
			{{-1, 50}, {93, 143}, {144, 143}, {145, 143}, {173, 143}, {193, 143}, {194, 143}, {218, 143}, {224, 143}, {225, 143}, },
			{{-1, 108}, {165, 188}, },
			{{-1, 155}, {156, 179}, },
			{{-1, 13}, },
			{{-1, 30}, },
			{{-1, 23}, },
			{{-1, 99}, },
			{{-1, 144}, },
			{{-1, 145}, {144, 173}, },
			{{-1, 197}, },
			{{-1, 65}, },
			{{-1, 204}, },
			{{-1, 72}, },
			{{-1, 75}, },
			{{-1, 78}, },
			{{-1, 84}, },
			{{-1, 88}, },
			{{-1, 92}, },
			{{-1, 156}, },
        };*/
    private static String[] errorMessages;
/*      {
			"expecting: 'caractere', 'booleano', 'numero', 'vetor', 'vazio', '->', EOF",
			"expecting: identificador, '['",
			"expecting: 'caractere', 'booleano', 'numero'",
			"expecting: identificador",
			"expecting: 'caractere', 'booleano', 'numero', 'vetor', 'vazio'",
			"expecting: EOF",
			"expecting: '['",
			"expecting: '('",
			"expecting: '.', ',', '('",
			"expecting: '.'",
			"expecting: identificador, caractere, string, booleano, numero, '-', 'nao', '('",
			"expecting: 'caractere', 'booleano', 'numero', 'vetor', ')'",
			"expecting: '.', ','",
			"expecting: 'caractere', 'booleano', 'numero', 'vetor', 'retorne', 'vazio', 'fim', 'se', 'enquanto', 'para', 'para cada', 'exibir', 'ler', identificador, '->', EOF",
			"expecting: '+', '-', '*', '/', '>', '<', '>=', '<=', '=', 'e', 'ou', ':=', '.', ',', ';', '(', ')', '[', ']', '|'",
			"expecting: '+', '-', '*', '/', '>', '<', '>=', '<=', '=', 'e', 'ou', '.', ',', ';', ')', ']', '|'",
			"expecting: ']'",
			"expecting: '.', ',', ';', ')', ']', '|'",
			"expecting: 'ou', '.', ',', ';', ')', ']', '|'",
			"expecting: 'e', 'ou', '.', ',', ';', ')', ']', '|'",
			"expecting: '=', 'e', 'ou', '.', ',', ';', ')', ']', '|'",
			"expecting: '>', '<', '>=', '<=', '=', 'e', 'ou', '.', ',', ';', ')', ']', '|'",
			"expecting: '+', '-', '>', '<', '>=', '<=', '=', 'e', 'ou', '.', ',', ';', ')', ']', '|'",
			"expecting: 'inicio'",
			"expecting: ')'",
			"expecting: ')', '|'",
			"expecting: identificador, caractere, string, booleano, numero, '-', 'nao', '(', ')'",
			"expecting: '+', '-', '*', '/', '>', '<', '>=', '<=', '=', 'e', 'ou', ':=', '.', ',', ';', ')', '[', ']', '|'",
			"expecting: 'caractere', 'booleano', 'numero', 'vetor', 'retorne', 'fim', 'se', 'enquanto', 'para', 'para cada', 'exibir', 'ler', identificador",
			"expecting: 'caractere', 'booleano', 'numero', 'vetor'",
			"expecting: identificador, caractere, string, booleano, numero, '-', 'nao', '.', '('",
			"expecting: 'caractere', 'booleano', 'numero', 'vetor', 'retorne', 'vazio', 'fim', 'se', 'senao', 'enquanto', 'para', 'para cada', 'exibir', 'ler', identificador, '->', EOF",
			"expecting: 'retorne', 'fim', 'se', 'enquanto', 'para', 'para cada', 'exibir', 'ler', identificador",
			"expecting: ':='",
			"expecting: 'retorne', 'fim', 'se', 'senao', 'enquanto', 'para', 'para cada', 'exibir', 'ler', identificador",
			"expecting: ':=', ',', ')', '['",
			"expecting: ',', ';', ')'",
			"expecting: ';'",
			"expecting: ',', ')'",
			"expecting: '.', ',', ';', ')'",
			"expecting: 'retorne', 'inicio', 'exibir', 'ler', identificador",
			"expecting: ':'",
        };*/
    private static int[] errors;
/*      {
			0, 1, 1, 1, 2, 3, 4, 5, 0, 0, 3, 3, 0, 0, 6, 7, 3, 3, 8, 9, 0, 10, 1, 1, 11, 7, 7, 3, 11, 12, 12, 13, 14, 15, 15, 15, 15, 10, 10, 10, 15, 16, 17, 18, 19, 20, 21, 22, 15, 15, 15, 1, 23, 3, 24, 25, 11, 11, 12, 23, 24, 12, 26, 10, 27, 27, 15, 15, 24, 1, 10, 18, 18, 10, 19, 19, 10, 20, 20, 10, 10, 10, 10, 21, 21, 10, 10, 22, 22, 10, 10, 15, 15, 28, 0, 25, 23, 29, 25, 25, 23, 24, 23, 24, 0, 23, 15, 25, 24, 16, 27, 15, 18, 18, 19, 19, 20, 20, 21, 21, 21, 21, 21, 22, 22, 22, 15, 15, 15, 30, 31, 7, 7, 7, 7, 7, 7, 28, 3, 32, 32, 9, 33, 9, 28, 32, 0, 25, 25, 0, 23, 0, 23, 0, 10, 25, 25, 15, 27, 34, 9, 10, 10, 3, 29, 26, 3, 12, 34, 10, 34, 31, 28, 32, 31, 32, 0, 0, 25, 25, 34, 24, 24, 35, 36, 37, 3, 9, 24, 38, 24, 39, 31, 40, 40, 3, 36, 36, 10, 41, 34, 9, 3, 38, 38, 9, 34, 34, 34, 32, 36, 36, 37, 3, 34, 38, 38, 34, 40, 32, 3, 24, 32, 24, 40, 40, 32, 32, 
        };*/

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Parser.class.getResourceAsStream("parser.dat")));

            // read actionTable
            int length = s.readInt();
            Parser.actionTable = new int[length][][];
            for(int i = 0; i < Parser.actionTable.length; i++)
            {
                length = s.readInt();
                Parser.actionTable[i] = new int[length][3];
                for(int j = 0; j < Parser.actionTable[i].length; j++)
                {
                for(int k = 0; k < 3; k++)
                {
                    Parser.actionTable[i][j][k] = s.readInt();
                }
                }
            }

            // read gotoTable
            length = s.readInt();
            gotoTable = new int[length][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][2];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                for(int k = 0; k < 2; k++)
                {
                    gotoTable[i][j][k] = s.readInt();
                }
                }
            }

            // read errorMessages
            length = s.readInt();
            errorMessages = new String[length];
            for(int i = 0; i < errorMessages.length; i++)
            {
                length = s.readInt();
                StringBuffer buffer = new StringBuffer();

                for(int j = 0; j < length; j++)
                {
                buffer.append(s.readChar());
                }
                errorMessages[i] = buffer.toString();
            }

            // read errors
            length = s.readInt();
            errors = new int[length];
            for(int i = 0; i < errors.length; i++)
            {
                errors[i] = s.readInt();
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"parser.dat\" is either missing or corrupted.");
        }
    }
}
