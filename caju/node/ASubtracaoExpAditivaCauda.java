/* This file was generated by SableCC (http://www.sablecc.org/). */

package caju.node;

import caju.analysis.*;

@SuppressWarnings("nls")
public final class ASubtracaoExpAditivaCauda extends PExpAditivaCauda
{
    private TOpMenos _opMenos_;
    private PExpMultiplicativa _right_;

    public ASubtracaoExpAditivaCauda()
    {
        // Constructor
    }

    public ASubtracaoExpAditivaCauda(
        @SuppressWarnings("hiding") TOpMenos _opMenos_,
        @SuppressWarnings("hiding") PExpMultiplicativa _right_)
    {
        // Constructor
        setOpMenos(_opMenos_);

        setRight(_right_);

    }

    @Override
    public Object clone()
    {
        return new ASubtracaoExpAditivaCauda(
            cloneNode(this._opMenos_),
            cloneNode(this._right_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseASubtracaoExpAditivaCauda(this);
    }

    public TOpMenos getOpMenos()
    {
        return this._opMenos_;
    }

    public void setOpMenos(TOpMenos node)
    {
        if(this._opMenos_ != null)
        {
            this._opMenos_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._opMenos_ = node;
    }

    public PExpMultiplicativa getRight()
    {
        return this._right_;
    }

    public void setRight(PExpMultiplicativa node)
    {
        if(this._right_ != null)
        {
            this._right_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._right_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._opMenos_)
            + toString(this._right_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._opMenos_ == child)
        {
            this._opMenos_ = null;
            return;
        }

        if(this._right_ == child)
        {
            this._right_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._opMenos_ == oldChild)
        {
            setOpMenos((TOpMenos) newChild);
            return;
        }

        if(this._right_ == oldChild)
        {
            setRight((PExpMultiplicativa) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
