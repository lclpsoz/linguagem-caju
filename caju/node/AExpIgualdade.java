/* This file was generated by SableCC (http://www.sablecc.org/). */

package caju.node;

import java.util.*;
import caju.analysis.*;

@SuppressWarnings("nls")
public final class AExpIgualdade extends PExpIgualdade
{
    private PExpRelacional _left_;
    private final LinkedList<PExpIgualdadeCauda> _expIgualdadeCauda_ = new LinkedList<PExpIgualdadeCauda>();

    public AExpIgualdade()
    {
        // Constructor
    }

    public AExpIgualdade(
        @SuppressWarnings("hiding") PExpRelacional _left_,
        @SuppressWarnings("hiding") List<?> _expIgualdadeCauda_)
    {
        // Constructor
        setLeft(_left_);

        setExpIgualdadeCauda(_expIgualdadeCauda_);

    }

    @Override
    public Object clone()
    {
        return new AExpIgualdade(
            cloneNode(this._left_),
            cloneList(this._expIgualdadeCauda_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAExpIgualdade(this);
    }

    public PExpRelacional getLeft()
    {
        return this._left_;
    }

    public void setLeft(PExpRelacional node)
    {
        if(this._left_ != null)
        {
            this._left_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._left_ = node;
    }

    public LinkedList<PExpIgualdadeCauda> getExpIgualdadeCauda()
    {
        return this._expIgualdadeCauda_;
    }

    public void setExpIgualdadeCauda(List<?> list)
    {
        for(PExpIgualdadeCauda e : this._expIgualdadeCauda_)
        {
            e.parent(null);
        }
        this._expIgualdadeCauda_.clear();

        for(Object obj_e : list)
        {
            PExpIgualdadeCauda e = (PExpIgualdadeCauda) obj_e;
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
            this._expIgualdadeCauda_.add(e);
        }
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._left_)
            + toString(this._expIgualdadeCauda_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._left_ == child)
        {
            this._left_ = null;
            return;
        }

        if(this._expIgualdadeCauda_.remove(child))
        {
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._left_ == oldChild)
        {
            setLeft((PExpRelacional) newChild);
            return;
        }

        for(ListIterator<PExpIgualdadeCauda> i = this._expIgualdadeCauda_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((PExpIgualdadeCauda) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        throw new RuntimeException("Not a child.");
    }
}
