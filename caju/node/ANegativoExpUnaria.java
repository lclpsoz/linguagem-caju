/* This file was generated by SableCC (http://www.sablecc.org/). */

package caju.node;

import caju.analysis.*;

@SuppressWarnings("nls")
public final class ANegativoExpUnaria extends PExpUnaria
{
    private TOpMenos _opMenos_;
    private PExpUnaria _expUnaria_;

    public ANegativoExpUnaria()
    {
        // Constructor
    }

    public ANegativoExpUnaria(
        @SuppressWarnings("hiding") TOpMenos _opMenos_,
        @SuppressWarnings("hiding") PExpUnaria _expUnaria_)
    {
        // Constructor
        setOpMenos(_opMenos_);

        setExpUnaria(_expUnaria_);

    }

    @Override
    public Object clone()
    {
        return new ANegativoExpUnaria(
            cloneNode(this._opMenos_),
            cloneNode(this._expUnaria_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseANegativoExpUnaria(this);
    }

    public TOpMenos getOpMenos()
    {
        return this._opMenos_;
    }

    public void setOpMenos(TOpMenos node)
    {
        if(this._opMenos_ != null)
        {
            this._opMenos_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._opMenos_ = node;
    }

    public PExpUnaria getExpUnaria()
    {
        return this._expUnaria_;
    }

    public void setExpUnaria(PExpUnaria node)
    {
        if(this._expUnaria_ != null)
        {
            this._expUnaria_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._expUnaria_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._opMenos_)
            + toString(this._expUnaria_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._opMenos_ == child)
        {
            this._opMenos_ = null;
            return;
        }

        if(this._expUnaria_ == child)
        {
            this._expUnaria_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._opMenos_ == oldChild)
        {
            setOpMenos((TOpMenos) newChild);
            return;
        }

        if(this._expUnaria_ == oldChild)
        {
            setExpUnaria((PExpUnaria) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
