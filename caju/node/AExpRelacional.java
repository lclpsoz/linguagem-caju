/* This file was generated by SableCC (http://www.sablecc.org/). */

package caju.node;

import java.util.*;
import caju.analysis.*;

@SuppressWarnings("nls")
public final class AExpRelacional extends PExpRelacional
{
    private PExpAditiva _left_;
    private final LinkedList<PExpRelacionalCauda> _expRelacionalCauda_ = new LinkedList<PExpRelacionalCauda>();

    public AExpRelacional()
    {
        // Constructor
    }

    public AExpRelacional(
        @SuppressWarnings("hiding") PExpAditiva _left_,
        @SuppressWarnings("hiding") List<?> _expRelacionalCauda_)
    {
        // Constructor
        setLeft(_left_);

        setExpRelacionalCauda(_expRelacionalCauda_);

    }

    @Override
    public Object clone()
    {
        return new AExpRelacional(
            cloneNode(this._left_),
            cloneList(this._expRelacionalCauda_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAExpRelacional(this);
    }

    public PExpAditiva getLeft()
    {
        return this._left_;
    }

    public void setLeft(PExpAditiva node)
    {
        if(this._left_ != null)
        {
            this._left_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._left_ = node;
    }

    public LinkedList<PExpRelacionalCauda> getExpRelacionalCauda()
    {
        return this._expRelacionalCauda_;
    }

    public void setExpRelacionalCauda(List<?> list)
    {
        for(PExpRelacionalCauda e : this._expRelacionalCauda_)
        {
            e.parent(null);
        }
        this._expRelacionalCauda_.clear();

        for(Object obj_e : list)
        {
            PExpRelacionalCauda e = (PExpRelacionalCauda) obj_e;
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
            this._expRelacionalCauda_.add(e);
        }
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._left_)
            + toString(this._expRelacionalCauda_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._left_ == child)
        {
            this._left_ = null;
            return;
        }

        if(this._expRelacionalCauda_.remove(child))
        {
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._left_ == oldChild)
        {
            setLeft((PExpAditiva) newChild);
            return;
        }

        for(ListIterator<PExpRelacionalCauda> i = this._expRelacionalCauda_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((PExpRelacionalCauda) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        throw new RuntimeException("Not a child.");
    }
}
