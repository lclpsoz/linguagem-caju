/* This file was generated by SableCC (http://www.sablecc.org/). */

package caju.node;

import caju.analysis.*;

@SuppressWarnings("nls")
public final class AParaCadaComando extends PComando
{
    private TReservadaParaCada _reservadaParaCada_;
    private TAbreParenteses _abreParenteses_;
    private PTipo _tipo_;
    private TIdentificador _var_;
    private TDoisPontos _doisPontos_;
    private TIdentificador _container_;
    private TFechaParenteses _fechaParenteses_;
    private PComandoSemSenao _comandoSemSenao_;

    public AParaCadaComando()
    {
        // Constructor
    }

    public AParaCadaComando(
        @SuppressWarnings("hiding") TReservadaParaCada _reservadaParaCada_,
        @SuppressWarnings("hiding") TAbreParenteses _abreParenteses_,
        @SuppressWarnings("hiding") PTipo _tipo_,
        @SuppressWarnings("hiding") TIdentificador _var_,
        @SuppressWarnings("hiding") TDoisPontos _doisPontos_,
        @SuppressWarnings("hiding") TIdentificador _container_,
        @SuppressWarnings("hiding") TFechaParenteses _fechaParenteses_,
        @SuppressWarnings("hiding") PComandoSemSenao _comandoSemSenao_)
    {
        // Constructor
        setReservadaParaCada(_reservadaParaCada_);

        setAbreParenteses(_abreParenteses_);

        setTipo(_tipo_);

        setVar(_var_);

        setDoisPontos(_doisPontos_);

        setContainer(_container_);

        setFechaParenteses(_fechaParenteses_);

        setComandoSemSenao(_comandoSemSenao_);

    }

    @Override
    public Object clone()
    {
        return new AParaCadaComando(
            cloneNode(this._reservadaParaCada_),
            cloneNode(this._abreParenteses_),
            cloneNode(this._tipo_),
            cloneNode(this._var_),
            cloneNode(this._doisPontos_),
            cloneNode(this._container_),
            cloneNode(this._fechaParenteses_),
            cloneNode(this._comandoSemSenao_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAParaCadaComando(this);
    }

    public TReservadaParaCada getReservadaParaCada()
    {
        return this._reservadaParaCada_;
    }

    public void setReservadaParaCada(TReservadaParaCada node)
    {
        if(this._reservadaParaCada_ != null)
        {
            this._reservadaParaCada_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._reservadaParaCada_ = node;
    }

    public TAbreParenteses getAbreParenteses()
    {
        return this._abreParenteses_;
    }

    public void setAbreParenteses(TAbreParenteses node)
    {
        if(this._abreParenteses_ != null)
        {
            this._abreParenteses_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._abreParenteses_ = node;
    }

    public PTipo getTipo()
    {
        return this._tipo_;
    }

    public void setTipo(PTipo node)
    {
        if(this._tipo_ != null)
        {
            this._tipo_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tipo_ = node;
    }

    public TIdentificador getVar()
    {
        return this._var_;
    }

    public void setVar(TIdentificador node)
    {
        if(this._var_ != null)
        {
            this._var_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._var_ = node;
    }

    public TDoisPontos getDoisPontos()
    {
        return this._doisPontos_;
    }

    public void setDoisPontos(TDoisPontos node)
    {
        if(this._doisPontos_ != null)
        {
            this._doisPontos_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._doisPontos_ = node;
    }

    public TIdentificador getContainer()
    {
        return this._container_;
    }

    public void setContainer(TIdentificador node)
    {
        if(this._container_ != null)
        {
            this._container_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._container_ = node;
    }

    public TFechaParenteses getFechaParenteses()
    {
        return this._fechaParenteses_;
    }

    public void setFechaParenteses(TFechaParenteses node)
    {
        if(this._fechaParenteses_ != null)
        {
            this._fechaParenteses_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._fechaParenteses_ = node;
    }

    public PComandoSemSenao getComandoSemSenao()
    {
        return this._comandoSemSenao_;
    }

    public void setComandoSemSenao(PComandoSemSenao node)
    {
        if(this._comandoSemSenao_ != null)
        {
            this._comandoSemSenao_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._comandoSemSenao_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._reservadaParaCada_)
            + toString(this._abreParenteses_)
            + toString(this._tipo_)
            + toString(this._var_)
            + toString(this._doisPontos_)
            + toString(this._container_)
            + toString(this._fechaParenteses_)
            + toString(this._comandoSemSenao_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._reservadaParaCada_ == child)
        {
            this._reservadaParaCada_ = null;
            return;
        }

        if(this._abreParenteses_ == child)
        {
            this._abreParenteses_ = null;
            return;
        }

        if(this._tipo_ == child)
        {
            this._tipo_ = null;
            return;
        }

        if(this._var_ == child)
        {
            this._var_ = null;
            return;
        }

        if(this._doisPontos_ == child)
        {
            this._doisPontos_ = null;
            return;
        }

        if(this._container_ == child)
        {
            this._container_ = null;
            return;
        }

        if(this._fechaParenteses_ == child)
        {
            this._fechaParenteses_ = null;
            return;
        }

        if(this._comandoSemSenao_ == child)
        {
            this._comandoSemSenao_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._reservadaParaCada_ == oldChild)
        {
            setReservadaParaCada((TReservadaParaCada) newChild);
            return;
        }

        if(this._abreParenteses_ == oldChild)
        {
            setAbreParenteses((TAbreParenteses) newChild);
            return;
        }

        if(this._tipo_ == oldChild)
        {
            setTipo((PTipo) newChild);
            return;
        }

        if(this._var_ == oldChild)
        {
            setVar((TIdentificador) newChild);
            return;
        }

        if(this._doisPontos_ == oldChild)
        {
            setDoisPontos((TDoisPontos) newChild);
            return;
        }

        if(this._container_ == oldChild)
        {
            setContainer((TIdentificador) newChild);
            return;
        }

        if(this._fechaParenteses_ == oldChild)
        {
            setFechaParenteses((TFechaParenteses) newChild);
            return;
        }

        if(this._comandoSemSenao_ == oldChild)
        {
            setComandoSemSenao((PComandoSemSenao) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
