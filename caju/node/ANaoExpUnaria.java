/* This file was generated by SableCC (http://www.sablecc.org/). */

package caju.node;

import caju.analysis.*;

@SuppressWarnings("nls")
public final class ANaoExpUnaria extends PExpUnaria
{
    private TOpNao _opNao_;
    private PExpUnaria _expUnaria_;

    public ANaoExpUnaria()
    {
        // Constructor
    }

    public ANaoExpUnaria(
        @SuppressWarnings("hiding") TOpNao _opNao_,
        @SuppressWarnings("hiding") PExpUnaria _expUnaria_)
    {
        // Constructor
        setOpNao(_opNao_);

        setExpUnaria(_expUnaria_);

    }

    @Override
    public Object clone()
    {
        return new ANaoExpUnaria(
            cloneNode(this._opNao_),
            cloneNode(this._expUnaria_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseANaoExpUnaria(this);
    }

    public TOpNao getOpNao()
    {
        return this._opNao_;
    }

    public void setOpNao(TOpNao node)
    {
        if(this._opNao_ != null)
        {
            this._opNao_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._opNao_ = node;
    }

    public PExpUnaria getExpUnaria()
    {
        return this._expUnaria_;
    }

    public void setExpUnaria(PExpUnaria node)
    {
        if(this._expUnaria_ != null)
        {
            this._expUnaria_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._expUnaria_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._opNao_)
            + toString(this._expUnaria_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._opNao_ == child)
        {
            this._opNao_ = null;
            return;
        }

        if(this._expUnaria_ == child)
        {
            this._expUnaria_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._opNao_ == oldChild)
        {
            setOpNao((TOpNao) newChild);
            return;
        }

        if(this._expUnaria_ == oldChild)
        {
            setExpUnaria((PExpUnaria) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
