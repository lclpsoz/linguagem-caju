/* This file was generated by SableCC (http://www.sablecc.org/). */

package caju.node;

import caju.analysis.*;

@SuppressWarnings("nls")
public final class ASeComando extends PComando
{
    private TReservadaSe _reservadaSe_;
    private TAbreParenteses _abreParenteses_;
    private PExp _exp_;
    private TFechaParenteses _fechaParenteses_;
    private PComandoSemSenao _thenPart_;
    private PComandoSenao _elsePart_;

    public ASeComando()
    {
        // Constructor
    }

    public ASeComando(
        @SuppressWarnings("hiding") TReservadaSe _reservadaSe_,
        @SuppressWarnings("hiding") TAbreParenteses _abreParenteses_,
        @SuppressWarnings("hiding") PExp _exp_,
        @SuppressWarnings("hiding") TFechaParenteses _fechaParenteses_,
        @SuppressWarnings("hiding") PComandoSemSenao _thenPart_,
        @SuppressWarnings("hiding") PComandoSenao _elsePart_)
    {
        // Constructor
        setReservadaSe(_reservadaSe_);

        setAbreParenteses(_abreParenteses_);

        setExp(_exp_);

        setFechaParenteses(_fechaParenteses_);

        setThenPart(_thenPart_);

        setElsePart(_elsePart_);

    }

    @Override
    public Object clone()
    {
        return new ASeComando(
            cloneNode(this._reservadaSe_),
            cloneNode(this._abreParenteses_),
            cloneNode(this._exp_),
            cloneNode(this._fechaParenteses_),
            cloneNode(this._thenPart_),
            cloneNode(this._elsePart_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseASeComando(this);
    }

    public TReservadaSe getReservadaSe()
    {
        return this._reservadaSe_;
    }

    public void setReservadaSe(TReservadaSe node)
    {
        if(this._reservadaSe_ != null)
        {
            this._reservadaSe_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._reservadaSe_ = node;
    }

    public TAbreParenteses getAbreParenteses()
    {
        return this._abreParenteses_;
    }

    public void setAbreParenteses(TAbreParenteses node)
    {
        if(this._abreParenteses_ != null)
        {
            this._abreParenteses_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._abreParenteses_ = node;
    }

    public PExp getExp()
    {
        return this._exp_;
    }

    public void setExp(PExp node)
    {
        if(this._exp_ != null)
        {
            this._exp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._exp_ = node;
    }

    public TFechaParenteses getFechaParenteses()
    {
        return this._fechaParenteses_;
    }

    public void setFechaParenteses(TFechaParenteses node)
    {
        if(this._fechaParenteses_ != null)
        {
            this._fechaParenteses_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._fechaParenteses_ = node;
    }

    public PComandoSemSenao getThenPart()
    {
        return this._thenPart_;
    }

    public void setThenPart(PComandoSemSenao node)
    {
        if(this._thenPart_ != null)
        {
            this._thenPart_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._thenPart_ = node;
    }

    public PComandoSenao getElsePart()
    {
        return this._elsePart_;
    }

    public void setElsePart(PComandoSenao node)
    {
        if(this._elsePart_ != null)
        {
            this._elsePart_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._elsePart_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._reservadaSe_)
            + toString(this._abreParenteses_)
            + toString(this._exp_)
            + toString(this._fechaParenteses_)
            + toString(this._thenPart_)
            + toString(this._elsePart_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._reservadaSe_ == child)
        {
            this._reservadaSe_ = null;
            return;
        }

        if(this._abreParenteses_ == child)
        {
            this._abreParenteses_ = null;
            return;
        }

        if(this._exp_ == child)
        {
            this._exp_ = null;
            return;
        }

        if(this._fechaParenteses_ == child)
        {
            this._fechaParenteses_ = null;
            return;
        }

        if(this._thenPart_ == child)
        {
            this._thenPart_ = null;
            return;
        }

        if(this._elsePart_ == child)
        {
            this._elsePart_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._reservadaSe_ == oldChild)
        {
            setReservadaSe((TReservadaSe) newChild);
            return;
        }

        if(this._abreParenteses_ == oldChild)
        {
            setAbreParenteses((TAbreParenteses) newChild);
            return;
        }

        if(this._exp_ == oldChild)
        {
            setExp((PExp) newChild);
            return;
        }

        if(this._fechaParenteses_ == oldChild)
        {
            setFechaParenteses((TFechaParenteses) newChild);
            return;
        }

        if(this._thenPart_ == oldChild)
        {
            setThenPart((PComandoSemSenao) newChild);
            return;
        }

        if(this._elsePart_ == oldChild)
        {
            setElsePart((PComandoSenao) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
