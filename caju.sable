Package caju;

Helpers
 digito = ['0' .. '9'];
 letra = ['a' .. 'z'] | ['A' .. 'Z'];
 underscore = '_';

 aspas_simples = ''';
 aspas_duplas = '"';
 virgula = ',';

 espaco = ' ';
 rc = 13;
 nl = 10;
 tab = 9;

 todos_caracteres = [0..0xffff];
 caractere_simples = [todos_caracteres - [''' + '\']];
 caractere_escape = '\' ('n' | 't' | 'r' | '\' | ''' | '"');

 nao_nl_rc = [todos_caracteres - [10 + 13]];
 nao_chave = [todos_caracteres - ['{' + '}']];
 nao_aspas_duplas = [todos_caracteres - '"'];

 identificador_corpo = letra | digito | underscore;

Tokens
 identificador = letra identificador_corpo*;
 caractere = aspas_simples (caractere_simples | caractere_escape) aspas_simples;
 string = aspas_duplas (nao_aspas_duplas | caractere_escape)* aspas_duplas;
 booleano = 'verdadeiro' | 'falso';
 numero = digito+ (virgula digito+)?;

 reservada_caractere = 'caractere';
 reservada_booleano = 'booleano';
 reservada_numero = 'numero';
 reservada_vetor = 'vetor';
 reservada_retorne = 'retorne';
 reservada_vazio = 'vazio';
 reservada_inicio = 'inicio';
 reservada_fim = 'fim';
 reservada_se = 'se';
 reservada_senao = 'senao';
 reservada_enquanto = 'enquanto';
 reservada_para = 'para';
 reservada_para_cada = 'para cada';
 reservada_exibir = 'exibir';
 reservada_ler = 'ler';

 op_mais = '+';
 op_menos = '-';
 op_mult = '*';
 op_div = '/';
 op_maior = '>';
 op_menor = '<';
 op_maior_igual = '>=';
 op_menor_igual = '<=';
 op_igual = '=';
 op_nao = 'nao';
 op_e = 'e';
 op_ou = 'ou';
 op_atribuicao = ':=';
 op_retorno_funcao = '->';

 ponto = '.';
 virgula = ',';
 dois_pontos = ':';
 ponto_virgula = ';';
 abre_parenteses = '(';
 fecha_parenteses = ')';
 abre_colchetes = '[';
 fecha_colchetes = ']';
 barra_vertical = '|';

 comentario_linha = '#' nao_nl_rc* (nl | rc);
 comentario_bloco = '{' nao_chave* '}';
 vazio = (espaco | rc | nl | tab)+;

Ignored Tokens
  vazio,
  comentario_bloco,
  comentario_linha;
